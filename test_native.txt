Pandoc
  Meta { unMeta = fromList [] }
  [ Header
      1
      ( "\22522\30990\36039\26009\32080\27083\33287stl"
      , []
      , []
      )
      [ Str "\22522\30990\36039\26009\32080\27083\33287STL" ]
  , Para
      [ Strong [ Str "\36039\26009\32080\27083" ]
      , Str
          "\26159\22312\31243\24335\35041\20786\23384\36039\26009\20197\26041\20415\34389\29702\30340\26041\27861\65292\19981\21516\30340\36039\26009\32080\27083\26377\21508\33258\30340\20778\40670\33287\32570\40670\65292\36984\25799\36969\30070\30340\36039\26009\32080\27083\21487\20197\20351\24471\36039\26009\30340\26597\25214\12289\28155\22686\25110\21034\38500\26356\26377\25928\29575\12290"
      , LineBreak
      , Str "C++\30340"
      , Strong
          [ Str "\27161\28310\27169\26495\24235(Standard"
          , Space
          , Str "template"
          , Space
          , Str "library,"
          , Space
          , Str "STL)"
          ]
      , Str
          "\25552\20379\35377\22810\21313\20998\24375\22823\30340\20839\24314\36039\26009\32080\27083\21487\20197\20351\29992\65292\29087\24713\36889\20123\24037\20855\26082\21487\20197\28187\23569\35377\22810\36093\22580\19978\19981\24517\35201\30340\31934\21147\33457\36027\65292\21448\21487\20197\38477\20302\20986\37679\30340\21487\33021\24615\12290"
      , LineBreak
      , Str
          "\36889\35023\26371\20808\20171\32057\26368\22522\26412\30340\36039\26009\32080\27083\65292\21253\21547\8216stack\8216\12289\8216queue\8216\12289\38499\21015\30340\24310\20280\8216vector\8216\12289Linked"
      , Space
      , Str
          "List\21644\19968\20123\27604\36611\36914\38542\30340\65306\8216priority_queue\8216\12289\8216map\8216\12289\8216set\8216\31561\36039\26009\32080\27083\12290\21069\22235\20491\22522\26412\36039\26009\32080\27083\24314\35696\33258\24049\35201\23526\20316\30475\30475\65292\20043\24460\22823\37096\20998\37117\26159\29992STL\30340\26481\35199\65292\30693\36947\27010\24565\20043\24460\23601\21487\20197\30452\25509\29992\12290"
      , LineBreak
      ]
  , Div
      ( "" , [ "tcolorbox" ] , [] )
      [ Para
          [ Str
              "\36889\35023\37325\35201\30340\26159\35201\29087\24713\29992\27861\21644\35722\21270\38988\65292\20854\20013\21069\22235\20491\36039\26009\32080\27083\19968\23450\35201\33258\24049\23531\20986\20358\19968\36941\65292\30693\36947\20839\37096\36939\20316\12290"
          ]
      ]
  , Header
      2
      ( "\27161\38957\27284\33287-std-\21517\31281\31354\38291"
      , []
      , []
      )
      [ Str "\27161\38957\27284\33287"
      , Space
      , Str "\8216std\8216"
      , Space
      , Str "\21517\31281\31354\38291"
      ]
  , Para
      [ Str
          "STL\30340\26481\35199\37117\26159\23531\22312\8216std\8216\21517\31281\31354\38291\20043\19979\30340\65292\22240\27492\22312\20351\29992\36889\20123\24037\20855\20043\21069\65292\37117\24517\38920\21152\20837\36889\20841\34892\31243\24335\30908\65306"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "#include"
          , Space
          , Str "<bits/stdc++.h>"
          , SoftBreak
          , Str "using"
          , Space
          , Str "namespace"
          , Space
          , Str "std;"
          ]
      ]
  , Para
      [ Str
          "\20854\20013\30340\8216<bits/stdc++.h>\8216\26159\19968\20491\23565\26044\31478\31243\36984\25163\21451\21892\30340\27161\38957\27284\65292\23427\28085\33995\20102\24190\20046\25152\26377\28436\31639\27861\31478\36093\25152\38656\35201\30340\24037\20855\65292\20197\19979\25152\26377\24037\20855\37117\21253\21547\22312\36889\20491\27161\38957\27284\19979\65292\30070\28982\20320\20063\21487\20197\19968\20491\19968\20491\8216include\8216\12290"
      ]
  , Header
      2
      ( "\21205\24907\38499\21015-dynamic-arrays" , [] , [] )
      [ Str "\21205\24907\38499\21015"
      , Space
      , Str "(Dynamic"
      , Space
      , Str "arrays)"
      ]
  , Para
      [ Str
          "\26368\22522\30990\30340\36039\26009\32080\27083\22823\27010\23601\26159\38499\21015\20102\65292\30456\20449\22823\23478\20063\37117\26371\20351\29992\12290"
      , LineBreak
      , Str
          "STL\30340\26041\20415\20043\34389\26159\23427\25552\20379\20102\19968\20491\21205\24907\22411\30340\38499\21015\8216vector\8216\65292\23427\21487\20197\20687\19968\33324\30340\38499\21015\19968\27171\25805\20316\65292\20006\19988\21487\20197\38568\26178\26356\21205\38499\21015\22823\23567\20197\37197\21512\20839\37096\20803\32032\25976\37327\30340\22686\28187\12290"
      ]
  , Header 3 ( "vector" , [] , [] ) [ Str "\8216vector\8216" ]
  , Para
      [ Str
          "\25105\20497\21487\20197\29992\20197\19979\26041\24335\20358\23459\21578\8216vector\8216"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "vector<int>"
          , Space
          , Str "vecA;"
          , SoftBreak
          , Str "//"
          , Space
          , Str
              "\23459\21578\19968\20491\20803\32032\22411\21029\28858int\30340\31354vector"
          , SoftBreak
          , Str "vector<int>"
          , Space
          , Str "vecB(10);"
          , SoftBreak
          , Str "//"
          , Space
          , Str
              "\23459\21578\19968\20491\38263\24230\28858\&10\30340vector\65292\21021\22987\20540\28858\&0"
          , SoftBreak
          , Str "vector<int>"
          , Space
          , Str "vecC(10,2);"
          , SoftBreak
          , Str "//"
          , Space
          , Str
              "\23459\21578\19968\20491\38263\24230\28858\&10\30340vector\65292\21021\22987\20540\28858\&2"
          , SoftBreak
          , Str "vector<int>"
          , Space
          , Str "vecD"
          , Space
          , Str "="
          , Space
          , Span
              ( "" , [] , [] )
              [ Str "1,"
              , Space
              , Str "2,"
              , Space
              , Str "3,"
              , Space
              , Str "4,"
              , Space
              , Str "5"
              ]
          , Str ";"
          , Space
          , Str "//"
          , Space
          , Str "\36070\20104\21021\22987\20540"
          , SoftBreak
          , Str "vector<int>"
          , Space
          , Str "vecE"
          , Space
          , Span
              ( "" , [] , [] )
              [ Str "1,"
              , Space
              , Str "2,"
              , Space
              , Str "3,"
              , Space
              , Str "4,"
              , Space
              , Str "5"
              ]
          , Str ";"
          , Space
          , Str "//"
          , Space
          , Str
              "\20063\21487\20197\36889\27171\36070\20104\21021\20540"
          ]
      ]
  , Para
      [ Str "\8216<"
      , Space
      , Str
          ">\8216\20013\30340\36039\26009\22411\21029\21487\20197\26367\25563\65292\20195\34920\38499\21015\20013\20803\32032\30340\22411\21029\12290"
      , LineBreak
      ]
  , Header
      3
      ( "\22686\28155\33287\26597\25214" , [] , [] )
      [ Str "\22686\28155\33287\26597\25214" ]
  , Para
      [ Str
          "\8216vector\8216\30340\8216push_back\8216\20989\25976\21487\20197\23559\20803\32032\26032\22686\21040\8216vector\8216\30340\26368\23614\31471\65307\8216pop_back\8216\20989\25976\21063\21034\38500\26368\23614\31471\30340\20803\32032\12290"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "vector<int>"
          , Space
          , Str "vec;"
          , SoftBreak
          , Str "vec.push_back(1);"
          , Space
          , Str "//"
          , Space
          , Str "[1]"
          , SoftBreak
          , Str "vec.push_back(4);"
          , Space
          , Str "//"
          , Space
          , Str "[1,4]"
          , SoftBreak
          , Str "vec.pop_back();"
          , Space
          , Str "//"
          , Space
          , Str "[1];"
          ]
      ]
  , Para
      [ Str
          "\8216vector\8216\33287\19968\33324\38499\21015\19968\27171\65292\21487\20197\29992\8216operator[]\8216\36914\34892\26597\25214\20803\32032\12290\21478\22806\20063\21487\20197\36879\36942STL\20839\24314\30340\8216at\8216\20989\25976\33287\8216back\8216\20989\25976\20358\36914\34892\20803\32032\30340\26597\25214\12290"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "v[0]"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , SoftBreak
          , Str "//"
          , Space
          , Str "\21360\20986vector\30340\31532\&0\20491\20803\32032"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "v.at(0)"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , SoftBreak
          , Str "//"
          , Space
          , Str "\20063\21487\20197\36889\27171"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "v.back()"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , SoftBreak
          , Str "//"
          , Space
          , Str
              "\21360\20986vector\23614\31471\30340\20803\32032\20540"
          ]
      ]
  , Para
      [ Str
          "\23563\35370\8216vector\8216\35041\30340\27599\20491\20803\32032\21487\20197\29992\26356\31777\30701\30340\23531\27861\65306"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "for(auto"
          , Space
          , Str "&x:vec)"
          , Span
              ( "" , [] , [] )
              [ SoftBreak
              , Str "cout"
              , Space
              , Str "<<"
              , Space
              , Str "x"
              , Space
              , Str "<<"
              , Space
              , Str "endl;"
              , SoftBreak
              ]
          ]
      ]
  , Para
      [ Str
          "\8216size\8216\20989\25976\22238\20659\26377\22810\23569\20803\32032\22312\36889\20491\8216vector\8216\35041\38754"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "for(int"
          , Space
          , Str "i=0;i<vec.size();i++)"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "vec[i]"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          ]
      ]
  , Header
      2
      ( "\22534\30090-stack" , [] , [] )
      [ Str "\22534\30090" , Space , Str "(Stack)" ]
  , Para
      [ Str
          "\22534\30090\65292\39015\21517\24605\32681\23601\26159\19968\22534\36039\26009\30090\25104\19968\22534\65292\27599\27425\37117\21482\33021\24478\26368\19978\38754\23384\21462\36039\26009\65292\21542\21063\25972\20491\22534\30090\23601\26371\20498\22604\65292\36889\27491\26159\25152\35586\20808\36914\24460\20986(first"
      , Space
      , Str "in"
      , Space
      , Str "last"
      , Space
      , Str "out,"
      , Space
      , Str "FILO)\21407\21063\12290"
      ]
  , Header
      3
      ( "\23526\20316\21407\29702" , [] , [] )
      [ Str "\23526\20316\21407\29702" ]
  , Para
      [ Str
          "\20551\35373\25105\24819\35201\30090\30436\23376\65292\23559\30436\23376\30090\22312\19968\36215\65292"
      , Strong
          [ Str
              "\27599\27425\25343\21040\30340\23601\26159\26368\19978\38754\30340\30436\23376\65292\25918\30436\23376\20063\26159\26368\19978\38754"
          ]
      , Str
          "\65292\37027\23601\36650\21040\8216stack\8216\20986\20358\20102\65281\27491\22909\23601\26159\8216stack\8216\30340\29992\27494\20043\22320\12290"
      ]
  , Div ( "" , [ "center" ] , [] ) []
  , Para
      [ Str
          "\20197\19978\23601\26159\8216stack\8216\30340\31034\24847\22294\65306\21482\33021\24478\26368\19978\38754\25343\21644\25918\65288\27492\34389\21407\26412\26368\19978\38754\26159"
      , Math InlineMath "y"
      , Str
          "\65292\21487\20197\25343\36208\65307\25110\32773\21487\20197\24478\26368\19978\38754\25918"
      , Math InlineMath "x"
      , Str
          "\36914\21435\12290\65289\37027\35201\24590\40636\23526\20316\21602\65311\21482\38656\35201\29992\19968\20491\38499\21015\21363\21487\65292\37027\36996\38656\35201\20160\40636\36039\35338\21602\65311\38656\35201\32173\35703\36889\20491\8216stack\8216\30340\26368\19978\26041\30340\20301\32622\65292\38568\33879\26481\35199\30340\8216push\8216\12289\8216pop\8216\32780\31227\21205\12290"
      ]
  , Div
      ( "" , [ "prbox" ] , [] )
      [ Para
          [ Span
              ( "" , [] , [] )
              [ Str "stack" , Space , Str "\32244\32722" ]
          , SoftBreak
          , Str
              "\35531\23526\20316\19968\20491\8216stack\8216\65292\38656\35201\25903\25588\20841\31278\25805\20316\65306"
          ]
      , OrderedList
          ( 1 , DefaultStyle , DefaultDelim )
          [ [ Para
                [ Str "\8216PUSH"
                , Space
                , Str "\8216"
                , Math InlineMath "x"
                , Str
                    "\65292\20195\34920\8216stack\8216\20839\35201\25918\20837\19968\20491\20540\28858"
                , Math InlineMath "x"
                , Str "\30340\29289\39636"
                ]
            ]
          , [ Para
                [ Str
                    "\8216POP\8216\65292\20195\34920\8216stack\8216\20839\35201\23559\26368\19978\23652\30340\26481\35199\25343\20986\20358\65292\20006\36664\20986\20854\20540\12290\22914\26524\8216stack\8216\26159\31354\30340\65292\35531\36664\20986\8216stack"
                , Space
                , Str "is"
                , Space
                , Str "empty!\8216"
                ]
            ]
          ]
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "int"
          , Space
          , Str "Stack[maxn],"
          , Space
          , Str "tot"
          , Space
          , Str "="
          , Space
          , Str "0;"
          , SoftBreak
          , Str "void"
          , Space
          , Str "PUSH(int"
          , Space
          , Str "x)"
          , Space
          , Span
              ( "" , [] , [] )
              [ SoftBreak
              , Str "Stack[tot++]"
              , Space
              , Str "="
              , Space
              , Str "x;"
              , SoftBreak
              ]
          , SoftBreak
          , Str "void"
          , Space
          , Str "POP()"
          , Span
              ( "" , [] , [] )
              [ SoftBreak
              , Str "if(tot"
              , Space
              , Str "=="
              , Space
              , Str "0)"
              , SoftBreak
              , Str "cout"
              , Space
              , Str "<<"
              , Space
              , Str "\"stack"
              , Space
              , Str "is"
              , Space
              , Str "empty!\";"
              , SoftBreak
              , Str "else"
              , SoftBreak
              , Str "cout"
              , Space
              , Str "<<"
              , Space
              , Str "Stack[\8211tot]"
              , Space
              , Str "<<"
              , Space
              , Str "endl;"
              , SoftBreak
              ]
          ]
      ]
  , Header 3 ( "stack" , [] , [] ) [ Str "\8216stack\8216" ]
  , Para
      [ Str
          "STL\20063\26377\20839\24314\30340\8216stack\8216\23481\22120\36969\37197\22120\65292\26377\26032\22686\12289\21034\38500\12289\26597\35426\26368\38914\37096\20803\32032\30340\21151\33021\12290\22522\26412\19978STL\20013\8216stack\8216\33021\20570\21040\30340\20107\24773\8216vector\8216\37117\33021\20570\21040\65292\20107\23526\19978\8216stack\8216\23601\26159\29992\8216vector\8216\23526\20316\23436\25104\30340\12290"
      , LineBreak
      ]
  , Div
      ( "" , [ "tcolorbox" ] , [] )
      [ Para
          [ Strong [ Str "\23481\22120\36969\37197\22120" ]
          , Str "\65288container"
          , Space
          , Str
              "adapter\65289\26159\21033\29992STL\21407\26377\30340\23481\22120(\22914\8216vector\8216)\21435\23526\20316\30340\20171\38754\12290\21033\29992\23481\22120\36969\37197\22120\21487\20197\20351\24471\31243\24335\30908\26356\21152\31777\28500\65292\22686\21152\31243\24335\21487\35712\24615\12290"
          , LineBreak
          , Str
              "STL\30340\8216stack\8216\12289\8216queue\8216\33287\8216priority_queue\8216\37117\26159\23481\22120\36969\37197\22120\30340\19968\31278\12290"
          ]
      ]
  , Para
      [ Str
          "\20197\19979\26159\23459\21578\19968\20491\8216stack\8216\30340\26041\27861\12290"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "stack<int>"
          , Space
          , Str "sta;"
          , Space
          , Str "//"
          , Space
          , Str
              "\23459\21578\19968\20491\20786\23384int\22411\21029\30340stack"
          ]
      ]
  , Para
      [ Str
          "\8216stack\8216\26159\25918\22312\8216<stack>\8216\27161\38957\27284\20839\65292\20351\29992\21069\35352\24471\24341\20837\12290"
      ]
  , Header
      3
      ( "\22534\30090\25805\20316" , [] , [] )
      [ Str "\22534\30090\25805\20316" ]
  , Para
      [ Str "\8216push()\8216"
      , Space
      , Str
          "\21487\20197\23559\36039\26009\25918\20837\22534\30090\30340\38914\37096\65307"
      , LineBreak
      , Str "\8216pop()\8216"
      , Space
      , Str "\23559\38914\31471\20803\32032\21034\38500\65307"
      , LineBreak
      , Str "\8216top()\8216"
      , Space
      , Str
          "\26597\35426\22534\30090\38914\31471\20803\32032\65307"
      , LineBreak
      , Str "\8216size()\8216"
      , Space
      , Str
          "\26597\35426\30446\21069\36996\20301\26044\22534\30090\20013\30340\36039\26009\25976\65307"
      , LineBreak
      , Str "\8216empty()\8216"
      , Space
      , Str
          "\22238\20659\22534\30090\26159\21542\28858\31354\12290"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "sta.push(3);"
          , Space
          , Str "//"
          , Space
          , Str "[3]"
          , SoftBreak
          , Str "sta.push(2);"
          , Space
          , Str "//"
          , Space
          , Str "[3,2]"
          , SoftBreak
          , Str "sta.push(5);"
          , Space
          , Str "//"
          , Space
          , Str "[3,2,5]"
          , SoftBreak
          , Str "sta.pop();"
          , Space
          , Str "//"
          , Space
          , Str "[3,2]"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "sta.size()"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , Space
          , Str "//"
          , Space
          , Str "2"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "sta.empty()"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , Space
          , Str "//"
          , Space
          , Str "0"
          , Space
          , Str "(\34920\31034\38750\31354)"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "sta.top()"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , Space
          , Str "//"
          , Space
          , Str "2"
          ]
      ]
  , Div
      ( "" , [ "tcolorbox" ] , [] )
      [ Para
          [ Str
              "\24120\29359\37679\35492\65306\22312\20351\29992\8216top()\8216\20989\25976\26178\35352\24471\35201\21152\25324\34399\65292\19981\35201CE\22312\21738\35041\37117\19981\30693\36947\12290"
          ]
      ]
  , Header
      3 ( "\32722\38988" , [] , [] ) [ Str "\32722\38988" ]
  , Para [ Str "\20358\20570\38988\30446\21543\65281" ]
  , Div
      ( "" , [ "prbox" ] , [] )
      [ Para
          [ Span
              ( "" , [] , [] )
              [ Str "Parentheses"
              , Space
              , Str "Balance"
              , Space
              , Str "(ZJ"
              , Space
              , Str "b304,"
              , Space
              , Str "UVa"
              , Space
              , Str "673)"
              ]
          , SoftBreak
          , Str
              "\32102\20320\19968\20491\30001\22235\20491\23383\20803\65288"
          , Quoted SingleQuote []
          , Str "(\8217"
          , Quoted
              SingleQuote
              [ Str "\12289" , Quoted SingleQuote [] , Str ")" ]
          , Quoted
              SingleQuote
              [ Str "\12289" , Quoted SingleQuote [] , Str "{" ]
          , Quoted
              SingleQuote
              [ Str "\12289" , Quoted SingleQuote [] , Str "}" ]
          , Str "\8216\65289\25152\32068\25104\30340\23383\20018"
          , Math InlineMath "S"
          , Str "\65292\35531\21839"
          , Math InlineMath "S"
          , Str
              "\26159\21542\28858\19968\20491\21512\27861\30340\23383\20018\65288\25105\20497\23450\32681\23383\20018\28858\21512\27861\65292\33509\19988\21807\33509\27599\19968\20491\25324\24359\37117\21487\20197\34987\21305\37197\21040\65292\8216\"()()\"`\21512\27861\65292\32780\8216\"{"
          , Space
          , Str "("
          , Space
          , Str "}"
          , Space
          , Str ")\"`\21063\19981\21512\27861\12290\65289\65292\19988"
          , Math InlineMath "|S| \\leq 10^5"
          , Str "\12290"
          ]
      ]
  , Div
      ( "" , [ "prbox" ] , [] )
      [ Para
          [ Span
              ( "" , [] , [] )
              [ Str "Rails"
              , Space
              , Str "(TIOJ"
              , Space
              , Str "1012,"
              , Space
              , Str "UVa"
              , Space
              , Str "514)"
              ]
          ]
      , Para
          [ Str
              "\29694\22312\26377\19968\20491\28779\36554\31449\65292\21644\32232\34399\28858"
          , Math InlineMath "1, 2, 3, \\cdots n"
          , Str
              "\30340\28779\36554\65292\36523\28858\28779\36554\38263\30340\&03t\24819\35201\23559\20043\37325\26032\25490\21015\12290\28779\36554\30340\25490\21015\22914\19979\65306"
          ]
      , Div
          ( "" , [ "center" ] , [] )
          [ Para
              [ Image
                  ( "" , [] , [ ( "width" , "70%" ) ] )
                  [ Str "image" ]
                  ( "images/rails.png" , "" )
              ]
          ]
      , Para
          [ Str
              "\65288\27492\34389\65292\24819\35201\30340\37325\26032\25490\21015\26159"
          , Math InlineMath "5, 4, 3, 2, 1"
          , Str
              "\65292\32780\28779\36554\21487\20197\20570\30340\20107\23601\26159\36914\31449\65292\22914\26524"
          , Math InlineMath "a"
          , Str
              "\34399\28779\36554\36914\31449\20102\65292\20043\24460\21448\26377\19968\20491"
          , Math InlineMath "b"
          , Str "\28779\36554\36914\31449\65292\21063"
          , Math InlineMath "b"
          , Str "\28779\36554\24471\20808\20986\31449\65292"
          , Math InlineMath "a"
          , Str
              "\28779\36554\25165\33021\20986\31449\65288\22826\31364\20102\65281\65289\65292\35531\21839\&03t\25152\24819\35201\30340\37325\26032\25490\21015\26159\21542\21487\33021\65311\65288"
          , Math InlineMath "n \\leq 10^5"
          , Str "\65289"
          ]
      ]
  , Div
      ( "" , [ "prbox" ] , [] )
      [ Para
          [ Span
              ( "" , [] , [] )
              [ Str "Cows" , Space , Str "(TIOJ" , Space , Str "1176)" ]
          , SoftBreak
          , Strong
              [ Str "\36889\19968\38988\27604\36611\38627\65281" ]
          , LineBreak
          , Str "\26377"
          , Math InlineMath "N"
          , Str
              "\38587\29275\25490\25104\19968\26781\32218\65292\27599\19968\38587\29275\37117\26377\39640\24230"
          , Math InlineMath "a_i"
          , Str
              "\65292\36889\20123\29275\24456\21916\27489\30475\20358\30475\21435\65292\32780\31532"
          , Math InlineMath "i"
          , Str "\38587\29275\30475\24471\21040\31532"
          , Math InlineMath "j"
          , Str
              "\38587\29275\30340\26781\20214\23601\26159\20013\38291\27794\26377\29275\25803\20303\20102\35222\32218\65292\20063\23601\26159\19981\23384\22312"
          , Math InlineMath "i < k < j"
          , Str "\20351\24471"
          , Math InlineMath "a_k > a_i"
          , Str "\12290\32102\23450"
          , Math InlineMath "N"
          , Str "\21644"
          , Math InlineMath "a_1, a_2, a_3, \\cdots, a_N"
          , Str
              "\65292\35531\21839\27599\19968\38587\29275\21487\20197\30475\24471\21040\24190\38587\29275\65311\65288"
          , Math InlineMath "N \\leq 10^6"
          , Str "\65289"
          ]
      ]
  , Header
      2
      ( "\20295\21015-queue" , [] , [] )
      [ Str "\20295\21015" , Space , Str "(Queue)" ]
  , Para
      [ Str
          "\20295\21015\65292\39015\21517\24605\32681\23601\26159\19968\22534\20154\22312\25490\38538\65292\20808\36914\21435\25490\38538\30340\20154\20808\20139\26377\36763\33510\25490\38538\30340\25104\26524\65292\36889\26159\25152\35586\20808\36914\20808\20986(first"
      , Space
      , Str "in"
      , Space
      , Str "first"
      , Space
      , Str "out,"
      , Space
      , Str "FIFO)\21407\21063\12290"
      ]
  , Header
      3
      ( "\23526\20316\21407\29702-1" , [] , [] )
      [ Str "\23526\20316\21407\29702" ]
  , Para
      [ Str
          "\24819\20687\19968\23478\29105\38272\30340\34507\31957\24215\65292\26377\24456\22810\20154\22312\25490\38538\65292\32780\27599\19968\20491\20154\37117\19981\26371\25554\38538\65292\37027\35201\24590\40636\27169\25836\21602\65311\30070\26368\21069\38754\30340\20154\25343\21040\20102\22818\23504\20197\27714\30340\34507\31957\30340\26178\20505\65292\23601\26371\24478"
      , Strong
          [ Str "\26368\21069\38754\38626\38283\38538\20237" ]
      , Str
          "\65292\32780\30070\26377\19968\20491\20154\32862\39321\32780\20358\65292\23601\26371\24478"
      , Strong
          [ Str "\26368\24460\38754\21152\20837\38538\20237" ]
      , Str
          "\12290\36889\23601\26159\8216queue\8216\30340\31934\31070\65281\20197\19979\28858\34507\31957\24215\25490\38538\30340\27169\25836\22294\65306"
      ]
  , Div ( "" , [ "center" ] , [] ) []
  , Para
      [ Str
          "\21644\8216stack\8216\19981\21516\30340\26159\65306\19968\20491\26159\25343\12289\25918\21516\20596\65292\32780\36889\20491\26159\30064\20596\65292\26159FIFO\65288First"
      , Space
      , Str "In"
      , Space
      , Str "Last"
      , Space
      , Str
          "Out\65289\36039\26009\32080\27083\12290\23526\20316\26041\27861\27604\36611\38627\19968\40670\65292\24471\22312\38499\21015\32173\25345\20841\20491\35722\25976\65288\20063\23601\26159\38957\21644\23614\65289\65292\25554\20837\30340\26178\20505\21205\23614\65292\32780\38626\38283\30340\26178\20505\21205\38957\12290\35531\27880\24847\65306\36889\35023\30340Queue\23526\20316\26041\27861\26159\24490\29872\30340\65292\19981\20877\21644\25805\20316\25976\26377\38364\65292\32780\21644\20803\32032\25976\37327\26377\38364\12290"
      ]
  , Div
      ( "" , [ "prbox" ] , [] )
      [ Para
          [ Span
              ( "" , [] , [] )
              [ Str "queue" , Space , Str "\32244\32722" ]
          , SoftBreak
          , Str
              "\35531\23526\20316\20986\19968\20491\8216queue\8216\21543\65281\35201\25903\25588\20841\20491\25805\20316\65306"
          ]
      , OrderedList
          ( 1 , DefaultStyle , DefaultDelim )
          [ [ Para
                [ Str "\8216PUSH"
                , Space
                , Str "\8216"
                , Math InlineMath "x"
                , Str
                    "\65292\20195\34920\8216queue\8216\30340\26368\24460\26041\35201\25554\20837\19968\20491\20540\28858"
                , Math InlineMath "x"
                , Str "\30340\29289\39636\12290"
                ]
            ]
          , [ Para
                [ Str
                    "\8216POP\8216\65292\20195\34920\8216queue\8216\20839\35201\23559\26368\21069\38754\30340\26481\35199\25343\20986\20358\65292\20006\36664\20986\20854\20540\12290\22914\26524\8216queue\8216\26159\31354\30340\65292\35531\36664\20986\"`queue"
                , Space
                , Str "is"
                , Space
                , Str "empty!\8216\""
                ]
            ]
          ]
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "int"
          , Space
          , Str "Queue[maxn],"
          , Space
          , Str "Front"
          , Space
          , Str "="
          , Space
          , Str "0,"
          , Space
          , Str "Back"
          , Space
          , Str "="
          , Space
          , Str "0;"
          , SoftBreak
          , Str "void"
          , Space
          , Str "PUSH(int"
          , Space
          , Str "x)"
          , Space
          , Span
              ( "" , [] , [] )
              [ SoftBreak
              , Str "Queue[Back]"
              , Space
              , Str "="
              , Space
              , Str "x;"
              , SoftBreak
              , Str "if(++Back"
              , Space
              , Str ">="
              , Space
              , Str "maxn)"
              , Space
              , Str "Back"
              , Space
              , Str "-="
              , Space
              , Str "maxn;"
              , SoftBreak
              ]
          , SoftBreak
          , Str "void"
          , Space
          , Str "POP()"
          , Span
              ( "" , [] , [] )
              [ SoftBreak
              , Str "if(Front"
              , Space
              , Str "=="
              , Space
              , Str "Back)"
              , SoftBreak
              , Str "cout"
              , Space
              , Str "<<"
              , Space
              , Str "\"queue"
              , Space
              , Str "is"
              , Space
              , Str "empty!\";"
              , SoftBreak
              , Str "else"
              , Span
                  ( "" , [] , [] )
                  [ SoftBreak
                  , Str "cout"
                  , Space
                  , Str "<<"
                  , Space
                  , Str "Queue[Front]"
                  , Space
                  , Str "<<"
                  , Space
                  , Str "endl;"
                  , SoftBreak
                  , Str "if(++Front"
                  , Space
                  , Str ">="
                  , Space
                  , Str "maxn)"
                  , Space
                  , Str "Front"
                  , Space
                  , Str "-="
                  , Space
                  , Str "maxn;"
                  , SoftBreak
                  ]
              , SoftBreak
              ]
          ]
      ]
  , Para
      [ Str
          "\20551\35373\36889\20491\20295\21015\26368\22810\21482\33021\23384"
      , Math InlineMath "N"
      , Str
          "\20491\20803\32032\65292\30070\19979\19968\20491\20803\32032\35201\34987\25918\36914\31532"
      , Math InlineMath "N+1"
      , Str "\26684\26178\65292\22240\28858\26377"
      , Space
      , Str "pop"
      , Space
      , Str
          "\25805\20316\30340\23384\22312\65292\25152\20197\36889\20491\20295\21015\19981\19968\23450\26159\28415\30340\29376\24907\12290\36890\24120\28858\20102\26377\25928\31680\30465\23526\20316\20295\21015\26178\25152\38656\30340\31354\38291\65292\25105\20497\37117\26371\29992\24490\29872\30340\26041\24335\20358\23526\20316queue\65292\24847\21363\20551\35373\21407\26412\23384\22312\31532"
      , Math InlineMath "1"
      , Str
          "\26684\30340\20803\32032\24050\32147\34987pop\25481\65292\25105\20497\23601\21487\20197\23559\21407\26412\35201\20786\23384\22312"
      , Math InlineMath "N+1"
      , Str "\26684\30340\20803\32032\20786\23384\22312\31532"
      , Math InlineMath "1"
      , Str
          "\26684\65292\37325\35079\21033\29992\33021\29992\30340\31354\38291\12290"
      ]
  , Header 3 ( "queue" , [] , [] ) [ Str "\8216queue\8216" ]
  , Para
      [ Str
          "STL\20063\28858\20295\21015\35373\35336\20102\19968\20491\23481\22120\36969\37197\22120\65292\38928\35373\30340\23481\22120\36319\8216stack\8216\19968\27171\26159\8216vector\8216\65307\23427\25903\25588\24478\24460\38754\25554\20837\36039\26009\65292\20294\26159\36039\26009\26159\24478\21069\38754\21462\20986\12290"
      , LineBreak
      , Str
          "\20197\19979\26159\8216queue\8216\30340\23459\21578\26041\27861\12290"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "queue<int>"
          , Space
          , Str "que;"
          , Space
          , Str "//"
          , Space
          , Str
              "\23459\21578\19968\20491\20786\23384int\22411\21029\30340queue"
          ]
      ]
  , Para
      [ Str
          "\8216queue\8216\26159\25918\22312\8216<queue>\8216\27161\38957\27284\20839\65292\20351\29992\21069\24517\38920\24341\20837\12290"
      ]
  , Header
      3
      ( "\20295\21015\25805\20316" , [] , [] )
      [ Str "\20295\21015\25805\20316" ]
  , Para
      [ Str "\8216push()\8216"
      , Space
      , Str
          "\21487\20197\23559\36039\26009\25490\20837\20295\21015\30340\23614\31471\65307"
      , LineBreak
      , Str "\8216pop()\8216"
      , Space
      , Str "\23559\21069\31471\20803\32032\21034\38500\65307"
      , LineBreak
      , Str "\8216front()\8216"
      , Space
      , Str
          "\26597\35426\20295\21015\21069\31471\20803\32032\65307"
      , LineBreak
      , Str "\8216size()\8216"
      , Space
      , Str
          "\26597\35426\30446\21069\36996\20301\26044\20295\21015\20839\30340\36039\26009\25976\65307"
      , LineBreak
      , Str "\8216empty()\8216"
      , Space
      , Str
          "\22238\20659\20295\21015\26159\21542\28858\31354\12290"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "que.push(3);"
          , Space
          , Str "//"
          , Space
          , Str "[3]"
          , SoftBreak
          , Str "que.push(2);"
          , Space
          , Str "//"
          , Space
          , Str "[3,2]"
          , SoftBreak
          , Str "que.push(5);"
          , Space
          , Str "//"
          , Space
          , Str "[3,2,5]"
          , SoftBreak
          , Str "que.pop();"
          , Space
          , Str "//"
          , Space
          , Str "[2,5]"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "que.front()"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , Space
          , Str "//"
          , Space
          , Str "2"
          ]
      ]
  , Div
      ( "" , [ "tcolorbox" ] , [] )
      [ Para
          [ Str
              "\26032\25163\24120\29359\37679\35492\65306\26159\8216front()\8216\65292\19981\26159\8216top()\8216\65292\19981\35201\25630\37679\20102\12290"
          ]
      ]
  , Header
      3 ( "\32722\38988-1" , [] , [] ) [ Str "\32722\38988" ]
  , Para [ Str "\20570\32722\38988\24456\37325\35201\65281" ]
  , Div
      ( "" , [ "prbox" ] , [] )
      [ Para
          [ Span
              ( "" , [] , [] )
              [ Str "Team"
              , Space
              , Str "queue"
              , Space
              , Str "(UVa"
              , Space
              , Str "540)"
              ]
          , SoftBreak
          , Str
              "\19968\22534\20154\35201\25490\38538\21435\36023\26481\35199\65292\20294\26159\36996\26377\19968\20491\38480\21046\65306\27599\19968\20491\20154\21487\33021\26371\26159"
          , Math InlineMath "M"
          , Str
              "\20491\32068\20013\30340\25104\21729\20043\19968\65288\27599\19968\20491\20154\26368\22810\21482\26371\21152\20837\19968\20491\32068\65289\65292\25152\20197\25490\38538\26371\26377\19968\20491\26032\30340\35215\21063\65306\22914\26524\19968\20491\20154\35201\21435\25490\38538\20102\65292\20294\26159\38538\20237\20013\26377\21516\32068\30340\20154\30340\35441\65292\37027\36889\20491\65288\26377\40670\32570\24503\65289\30340\20154\23601\26371\25554\38538\25554\21040\33258\24049\32068\30340\26411\31471\12290\26371\36319\20320\35498\38538\20237\26377\35504\65292\21644\19968\22534\36914\20837\38538\20237\65295\26368\21069\38754\30340\20154\38626\38283\30340\25351\20196\65292\35531\27169\25836\36889\20491\24773\27841\12290\65288\25351\20196\25976"
          , Math InlineMath "\\leq 2 \\times 10^5"
          , Str "\65292"
          , Math InlineMath "M  \\leq 10^3"
          , Str "\65289"
          ]
      ]
  , Div
      ( "" , [ "prbox" ] , [] )
      [ Para
          [ Span
              ( "" , [] , [] )
              [ Str "Throwing"
              , Space
              , Str "cards"
              , Space
              , Str "away"
              , Space
              , Str "I\65288UVa"
              , Space
              , Str "10935\65289"
              ]
          , SoftBreak
          , Str "\25105\29694\22312\26377"
          , Math InlineMath "n"
          , Str "\24373\29260\23531\19978\20102"
          , Math InlineMath "1"
          , Str "\21040"
          , Math InlineMath "n"
          , Str
              "\30340\27491\25972\25976\65292\19968\38283\22987\30001\19978\32780\19979\26159"
          , Math InlineMath "1, 2, 3, \\cdots, n"
          , Str
              "\65292\32780\25105\27599\27425\26371\36914\34892\36889\20491\25805\20316\65306\21482\35201\26377\20841\24373\29260\20197\19978\65292\23601\25226\31532\19968\24373\29260\25343\25481\65292\20006\19988\23559\26368\24460\19968\24373\29260\25918\21040\26368\19979\38754\12290\35531\36664\20986\29260\34987\25343\25481\30340\38918\24207\65311\65288"
          , Math InlineMath "n \\leq 10^5"
          , Str "\65289"
          ]
      ]
  , Header
      2
      ( "\38617\31471\20295\21015-deque" , [] , [] )
      [ Str "\38617\31471\20295\21015" , Space , Str "(Deque)" ]
  , Para
      [ Str
          "\22312\20171\32057\36889\20491\36039\26009\32080\27083\20043\21069\65292\35201\20808\27770\23450\36889\20491\36039\26009\32080\27083\30340\21816\27861\12290"
      ]
  , Div
      ( "" , [ "thm" ] , [] )
      [ Para
          [ Span
              ( "" , [] , [] )
              [ Str "Deque\30340\27491\30906\21816\27861" ]
          , SoftBreak
          , Str "\26681\25818Knuth\30340"
          , Emph
              [ Str "The"
              , Space
              , Str "Art"
              , Space
              , Str "of"
              , Space
              , Str "Computer"
              , Space
              , Str "Programming"
              ]
          , Str "\65292Volume"
          , Space
          , Str "1,"
          , Space
          , Str "Section"
          , Space
          , Str "2.2.1"
          , Space
          , Str "\"Stacks,"
          , Space
          , Str "Queues,"
          , Space
          , Str "and"
          , Space
          , Str "Deques\"\65306"
          , SoftBreak
          , Str "\12300A"
          , Space
          , Str "deque"
          , Space
          , Str "(\"double-ended"
          , Space
          , Str "queue\")"
          , Space
          , Str "is"
          , Space
          , Str "a"
          , Space
          , Str "linear"
          , Space
          , Str "list"
          , Space
          , Str "for"
          , Space
          , Str "which"
          , Space
          , Str "all"
          , Space
          , Str "insertions"
          , Space
          , Str "and"
          , Space
          , Str "deletions"
          , Space
          , Str "(and"
          , Space
          , Str "usually"
          , Space
          , Str "all"
          , Space
          , Str "accesses)"
          , Space
          , Str "are"
          , Space
          , Str "made"
          , Space
          , Str "at"
          , Space
          , Str "the"
          , Space
          , Str "ends"
          , Space
          , Str "of"
          , Space
          , Str "the"
          , Space
          , Str "list."
          , Space
          , Str "A"
          , Space
          , Str "deque"
          , Space
          , Str "is"
          , Space
          , Str "therefore"
          , Space
          , Str "more"
          , Space
          , Str "general"
          , Space
          , Str "than"
          , Space
          , Str "a"
          , Space
          , Str "stack"
          , Space
          , Str "or"
          , Space
          , Str "a"
          , Space
          , Str "queue;"
          , Space
          , Strong
              [ Str "it"
              , Space
              , Str "has"
              , Space
              , Str "some"
              , Space
              , Str "properties"
              , Space
              , Str "in"
              , Space
              , Str "common"
              , Space
              , Str "with"
              , Space
              , Str "a"
              , Space
              , Str "deck"
              , Space
              , Str "of"
              , Space
              , Str "cards,"
              , Space
              , Str "and"
              , Space
              , Str "it"
              , Space
              , Str "is"
              , Space
              , Str "pronounced"
              , Space
              , Str "the"
              , Space
              , Str "same"
              , Space
              , Str "way."
              ]
          , Str "\12301"
          , SoftBreak
          , Str "\27491\30906\21816\27861\28858"
          , Space
          , Str "[d"
          , Math InlineMath "\\varepsilon"
          , Str
              "k]\65292\22914\26524\24565\28858[di:kju:]\21487\33021\26371\35492\35469\28858"
          , Math InlineMath "dequeue"
          , Str
              "\65292\24847\24605\26159\24478\8216queue\8216\20013\31227\38500\65292\36896\25104\35492\26371\12290"
          ]
      ]
  , Para
      [ Str
          "\36889\20491\26481\35199\24863\35258\20687\26159\8216queue\8216\21644\8216stack\8216\30340\36914\21270\29256\65292"
      , Strong
          [ Str
              "\21487\20197\24478\38957\23614\25343\65292\20063\21487\20197\24478\38957\23614\25918\26481\35199"
          ]
      , Str "\65292\35211\20197\19979\31034\24847\22294\65306"
      ]
  , Div ( "" , [ "center" ] , [] ) []
  , Para
      [ Str
          "\25152\20197\26371\25903\25588\22235\20491\25805\20316\65306\20841\37002\21508\20841\20491\65292\25918\21644\25343\65306\8216push_back\8216\12289\8216push_front\8216\12289\8216pop_back\8216\12289\8216pop_front\8216\12290\37027\28858\20160\40636\35201\29992\8216stack\8216\21644\8216queue\8216\65292\32780\19981\30452\25509\29992\8216deque\8216\21602\65311\22240\28858\19981\38656\35201\37027\40636\22810\30340\21151\33021\65292\36996\26371\24433\38911\31243\24335\30340\21487\35712\24615\65306\22914\26524\27599\27425\37117\29992\8216deque\8216\65292\20294\26159\8216stack\8216\27604\36611\22909\25026\65292\19981\35201\27599\27425\37117\35387\35299\36889\20491\26159\8216stack\8216\65292\8216queue\8216\20043\39006\30340\12290\37027\35201\24590\40636\23526\20316\21602\65311\38656\35201\32173\35703\38957\23614\22312\21738\35041\65292\25152\20197\24478\36889\20491\26041\38754\23526\20316\12290"
      ]
  , Div
      ( "" , [ "prbox" ] , [] )
      [ Para
          [ Span
              ( "" , [] , [] )
              [ Str "deque" , Space , Str "\32244\32722" ]
          , SoftBreak
          , Str
              "\20358\23526\20316\8216deque\8216\21543\65281\36889\19968\27425\65292\38656\35201\25903\25588\22235\20491\25805\20316\65306"
          ]
      , OrderedList
          ( 1 , DefaultStyle , DefaultDelim )
          [ [ Para
                [ Str "\8216POP_FRONT\8216"
                , Space
                , Str "\21644"
                , Space
                , Str
                    "\8216POP_BACK\8216\65292\20998\21029\20195\34920\35201\24478\21069\38754\21644\24460\38754\25343\20986\26481\35199\20986\20358\20006\36664\20986\25343\20986\20358\30340\26481\35199\30340\20540\65292\22914\26524\27794\26377\26481\35199\21487\20197\25343\30340\35441\65292\37027\23601\36664\20986\8216\"deque"
                , Space
                , Str "is"
                , Space
                , Str "empty!\"`"
                ]
            ]
          , [ Para
                [ Str "\8216PUSH_FRONT\8216"
                , Space
                , Math InlineMath "x"
                , Space
                , Str "\21644"
                , Space
                , Str "\8216PUSH_BACK\8216"
                , Space
                , Math InlineMath "x"
                , Str
                    "\65292\20998\21029\20195\34920\35201\24478\21069\38754\21644\24460\38754\25554\20837\19968\20491\20540\28858"
                , Math InlineMath "x"
                , Str "\30340\29289\39636\12290"
                ]
            , Para
                [ Str
                    "\20006\19988\20445\35657\32317\20849\19981\26371\36229\36942"
                , Math InlineMath "N"
                , Str "\20491\25805\20316\12290"
                ]
            ]
          ]
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "int"
          , Space
          , Str "DeQueue[maxn],"
          , Space
          , Str "Front"
          , Space
          , Str "="
          , Space
          , Str "0,"
          , Space
          , Str "Back"
          , Space
          , Str "="
          , Space
          , Str "0;"
          , SoftBreak
          , Str "void"
          , Space
          , Str "PUSH_FRONT(int"
          , Space
          , Str "x)"
          , Space
          , Span
              ( "" , [] , [] )
              [ SoftBreak
              , Str "if(\8211Front"
              , Space
              , Str "<"
              , Space
              , Str "0)"
              , Space
              , Str "Front"
              , Space
              , Str "+="
              , Space
              , Str "maxn;"
              , SoftBreak
              , Str "DeQueue[Front]"
              , Space
              , Str "="
              , Space
              , Str "x;"
              , SoftBreak
              ]
          , SoftBreak
          , Str "void"
          , Space
          , Str "PUSH_BACK(int"
          , Space
          , Str "x)"
          , Space
          , Span
              ( "" , [] , [] )
              [ SoftBreak
              , Str "if(++Back"
              , Space
              , Str ">="
              , Space
              , Str "maxn)"
              , Space
              , Str "Back"
              , Space
              , Str "-="
              , Space
              , Str "maxn;"
              , SoftBreak
              , Str "DeQueue[Back]"
              , Space
              , Str "="
              , Space
              , Str "x;"
              , SoftBreak
              ]
          , SoftBreak
          , Str "void"
          , Space
          , Str "POP_FRONT()"
          , Span
              ( "" , [] , [] )
              [ SoftBreak
              , Str "if(Front"
              , Space
              , Str "=="
              , Space
              , Str "Back)"
              , SoftBreak
              , Str "cout"
              , Space
              , Str "<<"
              , Space
              , Str "\"deque"
              , Space
              , Str "is"
              , Space
              , Str "empty!\";"
              , SoftBreak
              , Str "else"
              , Span
                  ( "" , [] , [] )
                  [ SoftBreak
                  , Str "if(++Front"
                  , Space
                  , Str ">="
                  , Space
                  , Str "maxn)"
                  , Space
                  , Str "Front"
                  , Space
                  , Str "-="
                  , Space
                  , Str "maxn;"
                  , SoftBreak
                  , Str "cout"
                  , Space
                  , Str "<<"
                  , Space
                  , Str "DeQueue[Front]"
                  , Space
                  , Str "<<"
                  , Space
                  , Str "endl;"
                  , SoftBreak
                  ]
              , SoftBreak
              ]
          , SoftBreak
          , Str "void"
          , Space
          , Str "POP_BACK()"
          , Span
              ( "" , [] , [] )
              [ SoftBreak
              , Str "if(Front"
              , Space
              , Str "=="
              , Space
              , Str "Back)"
              , SoftBreak
              , Str "cout"
              , Space
              , Str "<<"
              , Space
              , Str "\"deque"
              , Space
              , Str "is"
              , Space
              , Str "empty!\";"
              , SoftBreak
              , Str "else"
              , Span
                  ( "" , [] , [] )
                  [ SoftBreak
                  , Str "if(\8211Back"
                  , Space
                  , Str "<"
                  , Space
                  , Str "0)"
                  , Space
                  , Str "Back"
                  , Space
                  , Str "+="
                  , Space
                  , Str "maxn;"
                  , SoftBreak
                  , Str "cout"
                  , Space
                  , Str "<<"
                  , Space
                  , Str "DeQueue[Back]"
                  , Space
                  , Str "<<"
                  , Space
                  , Str "endl;"
                  , SoftBreak
                  ]
              , SoftBreak
              ]
          ]
      ]
  , Header 3 ( "deque" , [] , [] ) [ Str "\8216deque\8216" ]
  , Para
      [ Str
          "STL\35041\38754\30340\8216deque\8216\20063\26377\38617\31471\20295\21015\30340\21151\33021\65292\21487\20197\22312\39318\31471\25110\23614\31471\23384\21462\36039\26009\65292\23459\21578\26178\35201\24341\20837\8216<deque>\8216\27161\38957\27284\12290\20197\19979\26159\8216deque\8216\30340\23459\21578\12290"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "deque<int>"
          , Space
          , Str "dq;"
          , Space
          , Str "//"
          , Space
          , Str "\23459\21578\19968\20491\31354\30340deque"
          ]
      ]
  , Header
      3
      ( "\38617\31471\20295\21015\25805\20316" , [] , [] )
      [ Str "\38617\31471\20295\21015\25805\20316" ]
  , Para
      [ Str "\8216push_back()\8216"
      , Space
      , Str
          "\21487\20197\23559\36039\26009\25490\20837\38617\31471\20295\21015\30340\23614\31471\65307"
      , LineBreak
      , Str "\8216pop_back()\8216"
      , Space
      , Str
          "\23559\38617\31471\20295\21015\23614\31471\20803\32032\21034\38500\65307"
      , LineBreak
      , Str "\8216push_front()\8216"
      , Space
      , Str
          "\21487\20197\23559\36039\26009\25490\20837\38617\31471\20295\21015\30340\39318\31471\65307"
      , LineBreak
      , Str "\8216pop_front()\8216"
      , Space
      , Str
          "\23559\38617\31471\20295\21015\39318\31471\20803\32032\21034\38500\65307"
      , LineBreak
      , Str "\8216front()\8216"
      , Space
      , Str
          "\26597\35426\38617\31471\20295\21015\39318\31471\20803\32032\65307"
      , LineBreak
      , Str "\8216back()\8216"
      , Space
      , Str
          "\26597\35426\38617\31471\20295\21015\23614\31471\20803\32032\65307"
      , LineBreak
      , Str "\8216size()\8216"
      , Space
      , Str
          "\26597\35426\30446\21069\36996\20301\26044\20295\21015\20839\30340\36039\26009\25976\65307"
      , LineBreak
      , Str "\8216empty()\8216"
      , Space
      , Str
          "\22238\20659\20295\21015\26159\21542\28858\31354\12290"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "dq.push_back(3);"
          , Space
          , Str "//"
          , Space
          , Str "[3]"
          , SoftBreak
          , Str "dq.push_back(1);"
          , Space
          , Str "//"
          , Space
          , Str "[3,1]"
          , SoftBreak
          , Str "dq.push_front(2);"
          , Space
          , Str "//"
          , Space
          , Str "[2,3,1]"
          , SoftBreak
          , Str "dq.pop_back();"
          , Space
          , Str "//"
          , Space
          , Str "[2,3]"
          , SoftBreak
          , Str "dq.pop_front();"
          , Space
          , Str "//"
          , Space
          , Str "[3]"
          , SoftBreak
          , Str "dq.push_front(1);"
          , Space
          , Str "//"
          , Space
          , Str "[1,3]"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "que.front()"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , Space
          , Str "//"
          , Space
          , Str "1"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "que.back()"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , Space
          , Str "//"
          , Space
          , Str "3"
          ]
      ]
  , Div
      ( "" , [ "tcolorbox" ] , [] )
      [ Para
          [ Str
              "\33021\29992\8216stack\8216\12289\8216queue\8216\12289\19968\33324\38499\21015\12289\25110\8216vector\8216\35299\27770\30340\21839\38988\23601\30433\37327\36991\20813\29992\8216deque\8216\12290"
          ]
      ]
  , Header
      2
      ( "\37832\32080\20018\21015-linked-list" , [] , [] )
      [ Str "\37832\32080\20018\21015"
      , Space
      , Str "(Linked"
      , Space
      , Str "List)"
      ]
  , Para
      [ Str
          "\29694\22312\20551\35373\25105\20497\22312\29609\19968\20491\36938\25138\65306\27599\19968\20491\20154\37117\35201\25351\19968\20491\20154\65292\37027\35201\24590\40636\32000\37636\36889\31278\38364\20418\21602\65311\23559\27599\19968\20491\20154\24819\25104\19968\20491\26481\35199\65292\35041\38754\21253\33879\33258\24049\30340\20540\21644\25351\21521\30340\20154\65281\36889\23601\26159Linked"
      , Space
      , Str "List\30340\31934\31070\12290"
      ]
  , Div ( "" , [ "center" ] , [] ) []
  , Para
      [ Str
          "\36889\35023\65292\34157\26771\23439\25351\21521\29579\25919\31098\65292\29579\25919\31098\25351\21521\26519\23578\24311......\30452\21040\21129\33267\36562\20572\27490\12290"
      ]
  , Header
      3
      ( "\38617\21521\20018\21015doubly-linked-list" , [] , [] )
      [ Str "\38617\21521\20018\21015\65288Doubly"
      , Space
      , Str "Linked"
      , Space
      , Str "List\65289"
      ]
  , Para
      [ Str
          "\26377\26178\20505\26371\26377\20154\24819\35201\30693\36947\26159\35504\25351\21521\20182\65292\23601\26371\20877\32173\35703\19968\20491\25351\27161\25351\21521\25351\21521\25105\30340\37027\20491\20154\65292\22294\24418\22823\27010\38263\36889\27171\65306"
      ]
  , Div ( "" , [ "center" ] , [] ) []
  , Para
      [ Str
          "\20316\27861\23601\26159\21602\65306\30070A\36899\21040B\30340\26178\20505\65292\23559A\25351\21521\30340\20154\35373\28858B\65292\32780B\30340\34987\25351\30340\20154\35373\28858A\12290"
      ]
  , Header
      3
      ( "\26597\35426\21644\20462\25913\21644\35079\38620\24230"
      , []
      , []
      )
      [ Str
          "\26597\35426\21644\20462\25913\21644\35079\38620\24230"
      ]
  , Para
      [ Str
          "\22914\26524\24819\35201\26597\35426\12300\19968\20491\26481\26481\25351\21040\35504\65311\12301\30340\35441\65292\39023\28982\36889\20491\21487\20197\22312"
      , Math InlineMath "O(1)"
      , Str
          "\20839\20570\23436\12290\37027\22914\26524\24819\35201\20570\30340\26159\26597\35426\12300\25105\36889\20491\20154\19968\30452\25351\65292\25351\21040\31532"
      , Math InlineMath "k"
      , Str
          "\20491\20154\26371\26159\35504\21602\65311\12301\37027\23601\24471\33457"
      , Math InlineMath "O(k)"
      , Str "\30340\26178\38291\65292\25152\20197"
      , Strong
          [ Str
              "\20018\21015\19981\36969\21512\38568\27231\23384\21462"
          ]
      , Str
          "\65292\20063\23601\26159\22312\21482\32102\20018\21015\38957\30340\29376\27841\19979\65292"
      , Space
      , Str "\26597\35426\31532"
      , Math InlineMath "n"
      , Str
          "\20491\30340\20540\65292\26371\35722\24471\24456\24930\12290"
      ]
  , Div
      ( "" , [ "tcolorbox" ] , [] )
      [ Para
          [ Str "\33509"
          , Space
          , Str
              "\35201\38568\27231\23384\21462\65292\36890\24120\26371\25645\37197\38499\21015\20358\23384\65288\20063\23601\26159\21602\65292\32173\25345\19968\20491\38499\21015\20358\23384\65289\12289\38499\21015\31532"
          , Math InlineMath "i"
          , Str "\20540\23384\31532"
          , Math InlineMath "i"
          , Str
              "\20491\20154\30340\20540\12289\25351\21521\19979\19968\20491\20154\30340\38499\21015\20540\12289\21644\34987\25351\30340\20154\30340\38499\21015\20540\12290"
          ]
      ]
  , Header
      3
      ( "\23526\20316\26178\38291" , [] , [] )
      [ Str "\23526\20316\26178\38291" ]
  , Para
      [ Str "\20808\20358\20491\32147\20856\21839\38988\12290" ]
  , Div
      ( "" , [ "prbox" ] , [] )
      [ Para
          [ Span
              ( "" , [] , [] )
              [ Str "\23526\20316\22121\22818\20043"
              , Space
              , Str "linked"
              , Space
              , Str "list"
              , Space
              , Str "\31687"
              ]
          , SoftBreak
          , Str "\35531\23526\20316\19968\20491\8216linked"
          , Space
          , Str
              "list\8216\65292\38656\35201\25903\25588\22235\31278\25805\20316\65306"
          ]
      , OrderedList
          ( 1 , DefaultStyle , DefaultDelim )
          [ [ Para
                [ Str "\8216INSERT"
                , Space
                , Str "\8216"
                , Math InlineMath "x"
                , Str "\65292\22312"
                , Space
                , Str "id"
                , Space
                , Str "="
                , Space
                , Math InlineMath "x"
                , Space
                , Str
                    "\30340\31680\40670\20043\24460\25554\20837\19968\20491\26032\31680\40670"
                , Space
                , Str "(\32102\20104\27969\27700\34399"
                , Space
                , Str "id)"
                ]
            ]
          , [ Para
                [ Str "\8216DELETE"
                , Space
                , Str "\8216"
                , Math InlineMath "x"
                , Str "\65292\21034\38500"
                , Space
                , Str "id"
                , Space
                , Str "="
                , Space
                , Math InlineMath "x"
                , Space
                , Str "\30340\31680\40670"
                ]
            ]
          , [ Para
                [ Str "\8216PREV/NEXT"
                , Space
                , Str "\8216"
                , Math InlineMath "x"
                , Str "\65292\26597\35426"
                , Space
                , Str "id"
                , Space
                , Str "="
                , Space
                , Math InlineMath "x"
                , Space
                , Str
                    "\30340\31680\40670\30340\21069\19968\38917/\19979\19968\38917\30340"
                , Space
                , Str "id"
                ]
            ]
          , [ Para
                [ Str "\8216TRAVEL\8216\65292\20381\24207\36664\20986"
                , Space
                , Str "linked"
                , Space
                , Str "list"
                , Space
                , Str "\20839\37096\30340\20839\23481"
                ]
            ]
          ]
      , Para
          [ Str
              "\23565\26044\21069\19977\31278\25805\20316\65292\33509\25214\19981\21040"
          , Space
          , Str "id"
          , Space
          , Str "="
          , Space
          , Str "x"
          , Space
          , Str "\30340\31680\40670\65292\21063\36664\20986"
          , Space
          , Str "\"The"
          , Space
          , Str "node"
          , Space
          , Str "does"
          , Space
          , Str "not"
          , Space
          , Str "exist.\""
          , Space
          , Str
              "\26044\19968\34892\12290\27880\24847\65292\22312\27492\38988\20013\65292id"
          , Space
          , Str "="
          , Space
          , Str "0"
          , Space
          , Str
              "\30340\31680\40670\28858\37832\32080\20018\21015\30340\38283\38957\12290"
          ]
      ]
  , Para
      [ Str "\27169\26495\38988\12290\22312\23526\20316linked"
      , Space
      , Str
          "list\26178\65292\25105\20497\36890\24120\26371\22312\26368\21069\38754\21152\19978\19968\20491\31354\31680\40670\65292\20197\21033\25554\20837\25805\20316\30340\23526\20316\26041\20415\20197\21450\19968\33268\24615\12290"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "struct"
          , Space
          , Str "linked_list"
          , Space
          , Span
              ( "" , [] , [] )
              [ SoftBreak
              , Str "struct"
              , Space
              , Str "node"
              , Space
              , Span
                  ( "" , [] , [] )
                  [ SoftBreak
                  , Str "node"
                  , Space
                  , Str "*prev,"
                  , Space
                  , Str "*next;"
                  , SoftBreak
                  , Str "int"
                  , Space
                  , Str "id;"
                  , SoftBreak
                  , Str "node():"
                  , Space
                  , Str "prev(NULL),"
                  , Space
                  , Str "next(NULL)"
                  , SoftBreak
                  ]
              , Str ";"
              , SoftBreak
              , Str "vector<node*>"
              , Space
              , Str "List;"
              , SoftBreak
              , Str "//"
              , Space
              , Str "list[x]"
              , Space
              , Str "\20786\23384\25351\21521"
              , Space
              , Str "id"
              , Space
              , Str "="
              , Space
              , Str "x"
              , Space
              , Str "\30340\25351\27161\65292\36889\23601\26159"
              , Space
              , Str "linked"
              , Space
              , Str "list"
              , Space
              , Str
                  "\36890\24120\25645\37197\38499\21015\30340\22320\26041"
              , SoftBreak
              , Str "linked_list(int"
              , Space
              , Str "n):"
              , Space
              , Str "List(n+1,NULL)"
              , Space
              , Span
                  ( "" , [] , [] )
                  [ SoftBreak
                  , Str "List[0]"
                  , Space
                  , Str "="
                  , Space
                  , Str "new"
                  , Space
                  , Str "node;"
                  , Space
                  , Str "//"
                  , Space
                  , Str "\36215\22987\31354\31680\40670"
                  , SoftBreak
                  , Str "List[0]->id"
                  , Space
                  , Str "="
                  , Space
                  , Str "0;"
                  , SoftBreak
                  ]
              , SoftBreak
              , Str "int"
              , Space
              , Str "prev(int"
              , Space
              , Str "x)"
              , Span
                  ( "" , [] , [] )
                  [ Space
                  , Str "//"
                  , Space
                  , Str "\26597\35426\21069\19968\38917\30340"
                  , Space
                  , Str "id"
                  , SoftBreak
                  , Str "if(List[x]"
                  , Space
                  , Str "&&"
                  , Space
                  , Str "List[x]->prev)"
                  , SoftBreak
                  , Str "return"
                  , Space
                  , Str "List[x]->prev->id;"
                  , SoftBreak
                  , Str "return"
                  , Space
                  , Str "-1;"
                  , SoftBreak
                  ]
              , SoftBreak
              , Str "int"
              , Space
              , Str "next(int"
              , Space
              , Str "x)"
              , Span
                  ( "" , [] , [] )
                  [ Space
                  , Str "//"
                  , Space
                  , Str "\26597\35426\19979\19968\38917\30340"
                  , Space
                  , Str "id"
                  , SoftBreak
                  , Str "if(List[x]"
                  , Space
                  , Str "&&"
                  , Space
                  , Str "List[x]->next)"
                  , SoftBreak
                  , Str "return"
                  , Space
                  , Str "List[x]->next->id;"
                  , SoftBreak
                  , Str "return"
                  , Space
                  , Str "-1;"
                  , SoftBreak
                  ]
              , SoftBreak
              , Str "bool"
              , Space
              , Str "Insert(int"
              , Space
              , Str "x,"
              , Space
              , Str "int"
              , Space
              , Str "id)"
              , Space
              , Span
                  ( "" , [] , [] )
                  [ SoftBreak
                  , Str "//"
                  , Space
                  , Str "\22312"
                  , Space
                  , Str "id"
                  , Space
                  , Str "="
                  , Space
                  , Str "x"
                  , Space
                  , Str "\30340\31680\40670\20043\24460\25554\20837"
                  , Space
                  , Str "id"
                  , Space
                  , Str "="
                  , Space
                  , Str "id"
                  , Space
                  , Str "\30340\31680\40670"
                  , SoftBreak
                  , Str "if(!List[x])"
                  , Space
                  , Str "return"
                  , Space
                  , Str "false;"
                  , SoftBreak
                  , Str "node"
                  , Space
                  , Str "*n"
                  , Space
                  , Str "="
                  , Space
                  , Str "new"
                  , Space
                  , Str "node;"
                  , SoftBreak
                  , Str "List[id]"
                  , Space
                  , Str "="
                  , Space
                  , Str "n;"
                  , SoftBreak
                  , Str "n->next"
                  , Space
                  , Str "="
                  , Space
                  , Str "List[x]->next;"
                  , SoftBreak
                  , Str "if(n->next)"
                  , Space
                  , Str "n->next->prev"
                  , Space
                  , Str "="
                  , Space
                  , Str "n;"
                  , SoftBreak
                  , Str "List[x]->next"
                  , Space
                  , Str "="
                  , Space
                  , Str "n;"
                  , SoftBreak
                  , Str "n->prev"
                  , Space
                  , Str "="
                  , Space
                  , Str "List[x];"
                  , SoftBreak
                  , Str "n->id"
                  , Space
                  , Str "="
                  , Space
                  , Str "id;"
                  , SoftBreak
                  , Str "return"
                  , Space
                  , Str "true;"
                  , SoftBreak
                  ]
              , SoftBreak
              , Str "bool"
              , Space
              , Str "Delete(int"
              , Space
              , Str "x)"
              , Span
                  ( "" , [] , [] )
                  [ SoftBreak
                  , Str "//"
                  , Space
                  , Str "\21034\38500"
                  , Space
                  , Str "id"
                  , Space
                  , Str "="
                  , Space
                  , Str "x"
                  , Space
                  , Str "\30340\31680\40670"
                  , SoftBreak
                  , Str "if(!List[x])"
                  , Space
                  , Str "return"
                  , Space
                  , Str "false;"
                  , SoftBreak
                  , Str "if(List[x]->next)"
                  , SoftBreak
                  , Str "List[x]->next->prev"
                  , Space
                  , Str "="
                  , Space
                  , Str "List[x]->prev;"
                  , SoftBreak
                  , Str "List[x]->prev->next"
                  , Space
                  , Str "="
                  , Space
                  , Str "List[x]->next;"
                  , SoftBreak
                  , Str "delete"
                  , Space
                  , Str "List[x];"
                  , SoftBreak
                  , Str "List[x]"
                  , Space
                  , Str "="
                  , Space
                  , Str "NULL;"
                  , SoftBreak
                  , Str "return"
                  , Space
                  , Str "true;"
                  , SoftBreak
                  ]
              , SoftBreak
              , Str "void"
              , Space
              , Str "travel()"
              , Span
                  ( "" , [] , [] )
                  [ Space
                  , Str "//"
                  , Space
                  , Str
                      "\20381\24207\23563\35370\25152\26377\31680\40670"
                  , SoftBreak
                  , Str "node"
                  , Space
                  , Str "*s"
                  , Space
                  , Str "="
                  , Space
                  , Str "List[0]->next;"
                  , Space
                  , Str "//"
                  , Space
                  , Str "start"
                  , SoftBreak
                  , Str "while(s)"
                  , Span
                      ( "" , [] , [] )
                      [ SoftBreak
                      , Str "printf(\""
                      , SoftBreak
                      , Str "s"
                      , Space
                      , Str "="
                      , Space
                      , Str "s->next;"
                      , SoftBreak
                      ]
                  , SoftBreak
                  , Str "puts(\"\");"
                  , SoftBreak
                  ]
              , SoftBreak
              ]
          , Str ";"
          ]
      ]
  , Div
      ( "" , [ "tcolorbox" ] , [] )
      [ Para
          [ Str "list"
          , Space
          , Str "\30340\20351\29992\26178\27231\65306"
          , SoftBreak
          , Str "\30070\38988\30446\35201\32771\24942\26576\20491"
          , Space
          , Str "id"
          , Space
          , Str
              "\30340\21069\24460\38917\30340\26178\20505\65292\20415\21487\20197\32771\24942\20351\29992"
          , Space
          , Str "linked"
          , Space
          , Str "list"
          , Space
          , Str "\35299\38988"
          ]
      ]
  , Div
      ( "" , [ "prbox" ] , [] )
      [ Para
          [ Span
              ( "" , [] , [] )
              [ Str "\38520\34892\40165\22823\36093\36554\65288NeOJ"
              , Space
              , Str "21\65289"
              ]
          , SoftBreak
          , Strong [ Str "\36664\20837\35498\26126" ]
          , LineBreak
          , Str
              "\31532\19968\34892\21253\21547\19968\20491\25972\25976"
          , Math InlineMath "N(N\\leq 10^5)"
          , Str "\65292\20195\34920\29694\22312\26377"
          , Math InlineMath "N"
          , Str "\20491\29609\23478\65292\32232\34399"
          , Math InlineMath "1"
          , Str "\65374"
          , Math InlineMath "N"
          , Str
              "\30340\29609\23478\30446\21069\20998\21029\28858\31532"
          , Math InlineMath "1"
          , Str "\65374"
          , Math InlineMath "N"
          , Str "\21517(\32232\34399"
          , Math InlineMath "1"
          , Str "\31532"
          , Math InlineMath "1"
          , Str "\21517\12289\32232\34399"
          , Math InlineMath "2"
          , Str "\31532"
          , Math InlineMath "2"
          , Str "\21517...)\12290"
          , LineBreak
          , Str
              "\31532\20108\34892\21253\21547\19968\20491\25972\25976"
          , Math InlineMath "M(M\\leq 50,000)"
          , Str
              "\65292\20195\34920\25509\19979\20358\26371\20381\24207\30332\29983"
          , Math InlineMath "M"
          , Str "\20491\20107\20214\12290"
          , LineBreak
          , Str "\25509\19979\20358\30340"
          , Math InlineMath "M"
          , Str
              "\34892\65292\27599\34892\21253\21547\20841\20491\25972\25976"
          , Math
              InlineMath "T_i,X_i(0\\leq T_i\\leq 1,1\\leq X_i\\leq N)"
          , Str "\65292"
          , Math InlineMath "T_i"
          , Str "\28858"
          , Math InlineMath "0"
          , Str "\30340\26178\20505\65292\20195\34920\32232\34399"
          , Math InlineMath "X_i"
          , Str
              "\30340\29609\23478\36973\21463\25915\25802\65292\28982\24460\38626\38283\36938\25138\65307"
          , Math InlineMath "T_i"
          , Str "\28858"
          , Math InlineMath "1"
          , Str "\30340\26178\20505\65292\20195\34920\32232\34399"
          , Math InlineMath "X_i"
          , Str
              "\30340\29609\23478\20351\29992\34909\21050\65292\28961\26781\20214\36229\36234\30070\21069\21517\27425\27604\20182\39640\19968\21517\30340\29609\23478\12290"
          , LineBreak
          , Str
              "\28204\35430\36039\26009\20445\35657\29609\23478\34987\28120\27760\20043\24460\19981\26371\20877\20986\29694\20219\20309\32000\37636\12290"
          , LineBreak
          , LineBreak
          , Strong [ Str "\36664\20986\35498\26126" ]
          , LineBreak
          , Str "\36664\20986\19968\34892\65292\21253\21547"
          , Math InlineMath "Y"
          , Str "\20491\25972\25976("
          , Math InlineMath "Y"
          , Str
              "\26159\21097\39192\29609\23478\30340\25976\37327)\65292\30001\21517\27425\23567\21040\22823\20381\24207\36664\20986\65292\25972\25976\20841\20841\38291\20197\31354\30333\38548\38283\12290"
          ]
      ]
  , Para
      [ Str

      , Space
      , Str "linked"
      , Space
      , Str "list"
      , Space
      , Str
          "\23565\26044id\30340\25554\20837\12289\21034\38500\25805\20316\37117\26159"
      , Space
      , Math InlineMath "O(1)"
      , Space
      , Str "\65292\25152\20197\32317\35079\38620\24230"
      , Space
      , Math InlineMath "O(N+M)"
      , Str "\12290"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para [ Str "int" , Space , Str "main()" ]
      , Para
          [ Str "int"
          , Space
          , Str "n,"
          , Space
          , Str "m,"
          , Space
          , Str "operation,"
          , Space
          , Str "id;"
          , SoftBreak
          , Str "cin"
          , Space
          , Str ">>"
          , Space
          , Str "n"
          , Space
          , Str ">>"
          , Space
          , Str "m;"
          , SoftBreak
          , Str "link_list"
          , Space
          , Str "List(n);"
          ]
      , Para
          [ Str "//"
          , Space
          , Str "\21021\22987\21270"
          , SoftBreak
          , Str "for(int"
          , Space
          , Str "i=0;i<n;i++)"
          , SoftBreak
          , Str "List.Insert(i,i+1);"
          ]
      , Para
          [ Str "while(m\8211)"
          , Span
              ( "" , [] , [] )
              [ SoftBreak
              , Str "cin"
              , Space
              , Str ">>"
              , Space
              , Str "operation;"
              , SoftBreak
              , Str "if(operation"
              , Space
              , Str "=="
              , Space
              , Str "0)"
              , Space
              , Span
                  ( "" , [] , [] )
                  [ SoftBreak
                  , Str "//"
                  , Space
                  , Str "\21034\38500\31680\40670"
                  , Space
                  , Str "id"
                  , SoftBreak
                  , Str "cin"
                  , Space
                  , Str ">>"
                  , Space
                  , Str "id;"
                  , SoftBreak
                  , Str "List.Delete(id);"
                  , SoftBreak
                  ]
              , Space
              , Str "else"
              , Space
              , Span
                  ( "" , [] , [] )
                  [ SoftBreak
                  , Str "//"
                  , Space
                  , Str "\36229\36234\21069\19968\21517"
                  , SoftBreak
                  , Str "cin"
                  , Space
                  , Str ">>"
                  , Space
                  , Str "id;"
                  , SoftBreak
                  , Str "int"
                  , Space
                  , Str "p"
                  , Space
                  , Str "="
                  , Space
                  , Str "List.prev(id);"
                  , SoftBreak
                  , Str "if(p!=0)"
                  , Span
                      ( "" , [] , [] )
                      [ SoftBreak
                      , Str "int"
                      , Space
                      , Str "pp"
                      , Space
                      , Str "="
                      , Space
                      , Str "List.prev(p);"
                      , SoftBreak
                      , Str "List.Delete(p);"
                      , SoftBreak
                      , Str "List.Delete(id);"
                      , SoftBreak
                      , Str "List.Insert(pp,id);"
                      , SoftBreak
                      , Str "List.Insert(id,p);"
                      , SoftBreak
                      ]
                  , SoftBreak
                  ]
              , SoftBreak
              ]
          , SoftBreak
          , Str "List.travel();"
          ]
      ]
  , Header
      2
      ( "\20108\20803\25628\23563\27193binary-search-tree"
      , []
      , []
      )
      [ Str "\20108\20803\25628\23563\27193(Binary"
      , Space
      , Str "Search"
      , Space
      , Str "Tree)"
      ]
  , Para
      [ Str
          "\36889\26159\19968\20491\24456\37325\35201\30340\35264\24565\65292\35201\22909\22909\23416\65281"
      , Strong
          [ Str
              "\36889\35023\26371\29992\21040\19968\20123\22522\26412\22294\35542\30340\29992\35486\65292\22914\26524\36996\26159\19981\29087\30340\35441\21487\20197\21435\35079\32722\19968\19979"
          ]
      , Str "\12290\23565\26044\19968\20491"
      , Strong [ Str "\20108\20803\27193" ]
      , Str
          "\65288\20063\23601\26159\27599\19968\20491\31680\40670\37117\26377\23569\26044\25110\31561\26044\20841\20491\23376\31680\40670\30340\27193\65289\36070\20540\65292\20351\24471\23565\26044\25152\26377\31680\40670\65292"
      , Strong
          [ Str
              "\20854\21491\31680\40670\30340\23376\27193\20013\30340\25976\23383\37117\27604\36889\20491\31680\40670\22823\65292\32780\24038\31680\40670\30340\23376\27193\20013\30340\25976\23383\37117\27604\36889\20491\31680\40670\23567"
          ]
      , Str
          "\65288\31281\28858\20108\20803\25628\23563\27193\24615\36074\65289\12290\20160\40636\24847\24605\65311\19988\30475\22294\20013\20998\35299\12290\20197\19979\26159\23565\26044\38598\21512"
      , Math InlineMath "\\{1, 2, 3, 4, 5, 6, 7\\}"
      , Str
          "\25152\24314\30340\20841\26869\20108\20803\25628\23563\27193\65306"
      ]
  , Div
      ( "" , [ "center" ] , [] )
      [ Div
          ( "" , [ "forest" ] , [] )
          [ Para
              [ Str "[4"
              , SoftBreak
              , Str "[2[1][3]]"
              , SoftBreak
              , Str "[6[5][7]]"
              , SoftBreak
              , Str "]"
              ]
          ]
      , Div
          ( "" , [ "forest" ] , [] )
          [ Para
              [ Str "[4"
              , SoftBreak
              , Str "[2[1][3]]"
              , SoftBreak
              , Str "[5[NULL][6[NULL][7]]]"
              , SoftBreak
              , Str "]"
              ]
          ]
      ]
  , Div
      ( "" , [ "tcolorbox" ] , [] )
      [ Para
          [ Str
              "\23565\26044\19968\26869\20108\20803\23563\27193\19978\30340\25152\26377\31680\40670\65292\20854\21491\23376\27193\20013\30340\25976\23383\37117\27604\36889\20491\31680\40670\22823\65307\24038\23376\27193\20013\30340\25976\23383\37117\27604\36889\20491\31680\40670\23567"
          ]
      ]
  , Para
      [ Str
          "\28858\20160\40636\36889\20491\37325\35201\21602\65311\20358\30475\19979\19968\20491\27573\33853\65281"
      ]
  , Header
      3
      ( "\20108\20803\25628\23563\27193\25152\33021\20570\30340\26377\36259\30340\22909\29609\30340\20107"
      , []
      , []
      )
      [ Str
          "\20108\20803\25628\23563\27193\25152\33021\20570\30340\26377\36259\30340\22909\29609\30340\20107"
      ]
  , Para
      [ Str
          "\36889\26159\19968\20491\20108\20803\27193\30340\31680\40670\65292\27599\20491\31680\40670\26377\19977\20491\25351\27161\20998\21029\25351\21521\33258\24049\30340\29238\31680\40670\20197\21450\24038\21491\23376\31680\40670\12290\27599\20491\25351\21521\8216node\8216\22411\21029\30340\25351\27161\37117\21487\20197\35222\28858\19968\26869\20108\20803\27193\65292\22240\27492\22312\36889\20491\31680\40670\20839\37096\23526\38555\19978\26159\23384\20102\19977\26869\27193\12290"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "struct"
          , Space
          , Str "node"
          , Space
          , Span
              ( "" , [] , [] )
              [ SoftBreak
              , Str "node"
              , Space
              , Str "*parent,*lson,*rson;"
              , SoftBreak
              , Str "int"
              , Space
              , Str "val;"
              , SoftBreak
              , Str "node(int"
              , Space
              , Str "data):"
              , SoftBreak
              , Str "parent(NULL),"
              , Space
              , Str "lson(NULL),"
              , Space
              , Str "rson(NULL),"
              , Space
              , Str "val(data)"
              , SoftBreak
              ]
          , Str ";"
          ]
      ]
  , Div
      ( "" , [ "tcolorbox" ] , [] )
      [ Para
          [ Str "\19968\20491\25351\27161\38656\35201\21344"
          , Math InlineMath "8"
          , Str
              "\20491bytes\65292\25152\20197\29992\25351\27161\23526\20316\30340\26481\35199\37117\35201\33457\34875\22810\30340\35352\25014\39636\65292\22312\26178\38291\19978\24120\25976\20063\26371\27604\36611\22823\12290"
          ]
      ]
  , Header
      4
      ( "\25554\20837\19968\20491\20803\32032" , [] , [] )
      [ Str "\25554\20837\19968\20491\20803\32032" ]
  , Para
      [ Str
          "\20551\35373\24050\32147\26377\19968\20491\20108\20803\25628\23563\27193\20102\65292\37027\35201\24590\40636\25554\20837\19968\20491\26032\20803\32032\65311\20551\35373\36889\20491\20803\32032\30340\20540\28858"
      , Math InlineMath "x"
      , Str
          "\65292\19988\30446\21069\36208\21040\30340\31680\40670\30340\20540\28858"
      , Math InlineMath "y"
      , Str
          "\65288\19968\38283\22987\30070\28982\26159\24478\26681\31680\40670\38283\22987\36208\65289\65292\37027\35442\25918\36889\20491\31680\40670\30340\21738\35041\21602\65311\26681\25818\20108\20803\25628\23563\27193\30340\23450\32681\65292\22914\26524"
      , Math InlineMath "x < y"
      , Str
          "\65292\21063\24448\24038\36208\65307\21453\20043\65292\21063\24448\21491\36208\12290\37027\22914\26524\27794\24471\36208\20102\65288\20063\23601\26159\35201\36208\30340\31680\40670\28858NULL\65289\65292\37027\23601\23559\26412\20358\25033\35442\35201\36208\30340\31680\40670\35373\28858"
      , Math InlineMath "x"
      , Str "\65292\23601\22909\20102\12290"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "void"
          , Space
          , Str "Insert(node"
          , Space
          , Str "*&x,"
          , Space
          , Str "int"
          , Space
          , Str "val)"
          , Space
          , Span
              ( "" , [] , [] )
              [ SoftBreak
              , Str "if(!x)"
              , Space
              , Span
                  ( "" , [] , [] )
                  [ SoftBreak
                  , Str "x"
                  , Space
                  , Str "="
                  , Space
                  , Str "new"
                  , Space
                  , Str "node(val);"
                  , SoftBreak
                  , Str "return"
                  , Space
                  , Str "x->parent"
                  , Space
                  , Str "="
                  , Space
                  , Str "NULL,"
                  , Space
                  , Str "void();"
                  , SoftBreak
                  ]
              , SoftBreak
              , Str "if(x->val"
              , Space
              , Str ">"
              , Space
              , Str "val)"
              , Span
                  ( "" , [] , [] )
                  [ SoftBreak
                  , Str "if(x->lson)"
                  , Space
                  , Str "Insert(x->lson,"
                  , Space
                  , Str "val);"
                  , SoftBreak
                  , Str "else"
                  , Space
                  , Str "x->lson"
                  , Space
                  , Str "="
                  , SoftBreak
                  , Str "new"
                  , Space
                  , Str "node(val),"
                  , Space
                  , Str "x->lson->parent"
                  , Space
                  , Str "="
                  , Space
                  , Str "x;"
                  , SoftBreak
                  ]
              , SoftBreak
              , Str "if(x->val"
              , Space
              , Str "<"
              , Space
              , Str "val)"
              , Span
                  ( "" , [] , [] )
                  [ SoftBreak
                  , Str "if(x->rson)"
                  , Space
                  , Str "Insert(x->rson,"
                  , Space
                  , Str "val);"
                  , SoftBreak
                  , Str "else"
                  , Space
                  , Str "x->rson"
                  , Space
                  , Str "="
                  , SoftBreak
                  , Str "new"
                  , Space
                  , Str "node(val),"
                  , Space
                  , Str "x->rson->parent"
                  , Space
                  , Str "="
                  , Space
                  , Str "x;"
                  , SoftBreak
                  ]
              , SoftBreak
              ]
          ]
      ]
  , Header
      4
      ( "\22914\20309\24314\31435\20108\20803\25628\23563\27193"
      , []
      , []
      )
      [ Str
          "\22914\20309\24314\31435\20108\20803\25628\23563\27193"
      ]
  , Para
      [ Str
          "\28858\20160\40636\35201\20808\35611\25554\20837\20877\35611\24863\35258\27604\36611\22522\26412\30340\24314\31435\65311\22240\28858\21602\65292\23565\26044\19968\20491\24207\21015"
      , Math InlineMath "[a_1, a_2, \\cdots a_n]"
      , Str "\65292\23559"
      , Math InlineMath "a_1"
      , Str "\35373\23450\28858\26681\65292\20877\23565"
      , Math InlineMath "a_2"
      , Str "\12289"
      , Math InlineMath "a_3"
      , Str "\12289"
      , Math InlineMath "a_n"
      , Str
          "\31561\65292\20381\24207\25554\20837\65292\25554\20837\23436\20102\23601\24314\31435\23436\25104\65281"
      ]
  , Header
      4
      ( "\25308\35370\36889\26869\27193" , [] , [] )
      [ Str "\25308\35370\36889\26869\27193" ]
  , Para
      [ Str
          "\20013\24207\23563\35370\26159\20108\20803\27193\30340\25308\35370\26041\24335\20043\19968\65292\21033\29992\20013\24207\23563\35370\19968\20491\20108\20803\25628\23563\27193\21487\20197\23559\36039\26009\32080\27083\20839\37096\30340\20540\25353\29031\22823\23567\25490\24207\36664\20986\12290\22240\27492\20108\20803\25628\23563\27193\26159\19968\20491\26377\24207(ordered)\30340\36039\26009\32080\27083\12290"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "void"
          , Space
          , Str "travel(node"
          , Space
          , Str "*x)"
          , Span
              ( "" , [] , [] )
              [ SoftBreak
              , Str "if(!x)"
              , Space
              , Str "return;"
              , SoftBreak
              , Str "travel(x->lson);"
              , SoftBreak
              , Str "printf(\""
              , SoftBreak
              , Str "travel(x->rson);"
              , SoftBreak
              ]
          ]
      ]
  , Para
      [ Str
          "\21478\22806\36996\26377\21069\24207\33287\24460\24207\23563\35370\26041\24335\65292\22312\20854\20182\38936\22495\19978\29992\24471\21040\12290"
      ]
  , Header
      4
      ( "\22312\27193\19978\26597\35426" , [] , [] )
      [ Str "\22312\27193\19978\26597\35426" ]
  , Para
      [ Str
          "\22312\36889\20491\20108\20803\25628\23563\27193\19978\65292\26681\25818\20540\25214\21040\31680\40670\65288\25110\32773\26159\26597\30475\26159\21542\23384\22312\65292\25214\22312\27193\19978\26368\38752\36817\19968\20491\20540\30340\40670\20043\39006\30340\65289\65292\37117\21487\20197\22312\27193\19978\36305\20358\36305\21435\20358\25628\23563\12290\20551\35373\35201\25628\23563\30340\20540\26159"
      , Math InlineMath "x"
      , Str
          "\65292\28982\24460\30446\21069\31680\40670\30340\20540\26159"
      , Math InlineMath "y"
      , Str
          "\65292\37027\20063\21487\20197\37325\35079\20197\19978\30340\21205\20316\65306"
      , Math InlineMath "x < y"
      , Str
          "\21063\24448\24038\36208\65292\21453\20043\21063\24448\21491\36208\65292\32080\26463\26781\20214\23601\26159\27794\24471\36208\25110\25214\21040\20102\12290"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "node"
          , Space
          , Str "*Find(node"
          , Space
          , Str "*x,"
          , Space
          , Str "int"
          , Space
          , Str "val)"
          , Space
          , Span
              ( "" , [] , [] )
              [ SoftBreak
              , Str "if(!x)"
              , Space
              , Str "return"
              , Space
              , Str "NULL;"
              , SoftBreak
              , Str "if(x->val"
              , Space
              , Str "=="
              , Space
              , Str "val)"
              , Space
              , Str "return"
              , Space
              , Str "x;"
              , SoftBreak
              , Str "else"
              , Space
              , Str "if(x->val"
              , Space
              , Str ">"
              , Space
              , Str "val)"
              , Space
              , Str "return"
              , Space
              , Str "Find(x->lson,"
              , Space
              , Str "val);"
              , SoftBreak
              , Str "else"
              , Space
              , Str "return"
              , Space
              , Str "Find(x->rson,"
              , Space
              , Str "val);"
              , SoftBreak
              ]
          ]
      ]
  , Header
      3
      ( "\23565\19968\20491\31680\40670say-goodbye" , [] , [] )
      [ Str "\23565\19968\20491\31680\40670Say"
      , Space
      , Str "Goodbye"
      ]
  , Para
      [ Str
          "\22914\26524\24819\35201\21034\38500\19968\20491\31680\40670\65292\37027\24471\20998\19977\20491case\65306\20381\29031\26159\19981\26159\33865\31680\40670\65288\20063\23601\26159\26377\27794\26377\23376\31680\40670\65289\65292\21487\20197\30475\20986\38656\19981\38656\35201\25214\26367\25563\20358\36958\35036\21407\26412\30340\31680\40670\30340\20301\32622\12290\22914\26524\26159\33865\31680\40670\23601\30452\25509\21034\25481\21363\21487\65292\21542\21063\38656\35201\25214\19968\20491\26367\36523\12290\37027\20316\27861\65306"
      ]
  , OrderedList
      ( 1 , DefaultStyle , DefaultDelim )
      [ [ Para
            [ Str
                "\22914\26524\26159\33865\31680\40670\65292\21063\30452\25509\21034\25481\12290"
            ]
        , Div
            ( "" , [ "C++" ] , [] )
            [ Para
                [ Str "if(!x)"
                , Space
                , Str "return"
                , Space
                , Str "false;"
                , SoftBreak
                , Str "if(!x->lson"
                , Space
                , Str "&&"
                , Space
                , Str "!x->rson)"
                , Span
                    ( "" , [] , [] )
                    [ SoftBreak
                    , Str "if(x->parent)"
                    , Space
                    , Str "(x->parent->val"
                    , Space
                    , Str ">"
                    , Space
                    , Str "x->val)?"
                    , SoftBreak
                    , Str "x->parent->lson"
                    , Space
                    , Str "="
                    , Space
                    , Str "NULL:"
                    , SoftBreak
                    , Str "x->parent->rson"
                    , Space
                    , Str "="
                    , Space
                    , Str "NULL;"
                    , SoftBreak
                    , Str "delete"
                    , Space
                    , Str "x;"
                    , SoftBreak
                    ]
                ]
            ]
        ]
      , [ Para
            [ Str
                "\22914\26524\20854\20013\19968\20491\23376\31680\40670\28858\31354\65292\21063\21487\20197\30452\25509\25289\19978\20358"
            ]
        , Div
            ( "" , [ "center" ] , [] )
            [ Div
                ( "" , [ "forest" ] , [] )
                [ Para
                    [ Str "[4"
                    , SoftBreak
                    , Str "[NULL]"
                    , SoftBreak
                    , Str "[5[NULL][7"
                    , SoftBreak
                    , Str "[6]"
                    , SoftBreak
                    , Str "[9]"
                    , SoftBreak
                    , Str "]]"
                    , SoftBreak
                    , Str "]"
                    ]
                ]
            , Div
                ( "" , [ "forest" ] , [] )
                [ Para
                    [ Str "[4"
                    , SoftBreak
                    , Str "[NULL]"
                    , SoftBreak
                    , Str "[7"
                    , SoftBreak
                    , Str "[6][9]"
                    , SoftBreak
                    , Str "]"
                    , SoftBreak
                    , Str "]"
                    ]
                ]
            ]
        , Para
            [ Str
                "\20551\35373\35201\21034\38500\&5\30332\29694\20182\21482\26377\19968\20491\23376\27193\65292\37027\23601\21487\20197\30452\25509\25226\&4\36899\21040\&7\23601\22909\20102\65288\24478\24038\22294\35722\25104\21491\22294\65289\12290"
            ]
        , Div
            ( "" , [ "C++" ] , [] )
            [ Para
                [ Str "else"
                , Space
                , Str "if(!x->lson)"
                , Span
                    ( "" , [] , [] )
                    [ SoftBreak
                    , Str "if(x->parent)"
                    , Span
                        ( "" , [] , [] )
                        [ SoftBreak
                        , Str "(x->parent->val"
                        , Space
                        , Str ">"
                        , Space
                        , Str "x->val)?"
                        , SoftBreak
                        , Str "x->parent->lson"
                        , Space
                        , Str "="
                        , Space
                        , Str "x->rson:"
                        , SoftBreak
                        , Str "x->parent->rson"
                        , Space
                        , Str "="
                        , Space
                        , Str "x->rson;"
                        , SoftBreak
                        ]
                    , Space
                    , Str "else"
                    , Space
                    , Str "root"
                    , Space
                    , Str "="
                    , Space
                    , Str "x->rson;"
                    , SoftBreak
                    , Str "x->rson->parent"
                    , Space
                    , Str "="
                    , Space
                    , Str "x->parent;"
                    , SoftBreak
                    , Str "delete"
                    , Space
                    , Str "x;"
                    , SoftBreak
                    ]
                , SoftBreak
                , Str "else"
                , Space
                , Str "if(!x->rson)"
                , Span
                    ( "" , [] , [] )
                    [ SoftBreak
                    , Str "if(x->parent)"
                    , Span
                        ( "" , [] , [] )
                        [ SoftBreak
                        , Str "(x->parent->val"
                        , Space
                        , Str ">"
                        , Space
                        , Str "x->val)?"
                        , SoftBreak
                        , Str "x->parent->lson"
                        , Space
                        , Str "="
                        , Space
                        , Str "x->lson:"
                        , SoftBreak
                        , Str "x->parent->rson"
                        , Space
                        , Str "="
                        , Space
                        , Str "x->lson;"
                        , SoftBreak
                        ]
                    , Space
                    , Str "else"
                    , Space
                    , Str "root"
                    , Space
                    , Str "="
                    , Space
                    , Str "x->lson;"
                    , SoftBreak
                    , Str "x->lson->parent"
                    , Space
                    , Str "="
                    , Space
                    , Str "x->parent;"
                    , SoftBreak
                    , Str "delete"
                    , Space
                    , Str "x;"
                    , SoftBreak
                    ]
                ]
            ]
        ]
      , [ Para
            [ Str "\22914\26524\19981\26159\65292\21063"
            , Strong
                [ Str
                    "\38656\35201\25214\19968\20491\31680\40670\30070\26367\36523"
                ]
            , Str "\12290"
            ]
        , Div
            ( "" , [ "lem" ] , [] )
            [ Para
                [ Span
                    ( "" , [] , [] )
                    [ Str "\26367\36523\30340\26781\20214" ]
                , SoftBreak
                , Str
                    "\25214\21040\30340\26367\36523\35201\31526\21512\65306\22914\26524\23559\35201\21034\38500\30340\31680\40670\35373\28858\26367\36523\30340\20540\65292\20006\19988\23559\26367\36523\21034\25481\20043\24460\65292\36996\26159\26371\31526\21512\20108\20998\25628\23563\27193\24615\36074\12290"
                ]
            ]
        , Para
            [ Str
                "\30475\24038\37002\23376\27193\65292\28982\24460\38283\22987\24448\21491\25214\21040\24213\12290\20363\22914\65306\22914\26524\36984\20102\24038\23376\27193\65292\37027\36208\20102\20043\24460\65292\38283\22987\19968\30452\24448\21491\23376\27193\36208\65292\30452\21040\19981\33021\20877\36208\20102\65292\37027\23601\23559\21407\26412\30340\31680\40670\30340\20540\25563\25104\37027\20491\40670\65292\28982\24460\36958\36852\21034\38500\37027\20491\26367\36523\12290"
            ]
        , Div
            ( "" , [ "C++" ] , [] )
            [ Para
                [ Str "else"
                , Span
                    ( "" , [] , [] )
                    [ SoftBreak
                    , Str "node"
                    , Space
                    , Str "*exchange"
                    , Space
                    , Str "="
                    , Space
                    , Str "x->lson;"
                    , SoftBreak
                    , Str "while(exchange->rson)"
                    , Space
                    , Str "exchange"
                    , Space
                    , Str "="
                    , Space
                    , Str "exchange->rson;"
                    , SoftBreak
                    , Str "x->val"
                    , Space
                    , Str "="
                    , Space
                    , Str "exchange->val;"
                    , Space
                    , Str "//"
                    , Space
                    , Str "copy"
                    , Space
                    , Str "the"
                    , Space
                    , Str "data"
                    , SoftBreak
                    , Str "Delete(root,"
                    , Space
                    , Str "exchange);"
                    , SoftBreak
                    ]
                ]
            ]
        ]
      ]
  , Para
      [ Str
          "\26368\24460\20877\21152\19978\19968\34892\23601\21487\20197\20102\12290"
      ]
  , Header
      4
      ( "\21034\38500\19968\20491\20540" , [] , [] )
      [ Str "\21034\38500\19968\20491\20540" ]
  , Para
      [ Str
          "\30070\25105\20497\35201\22312\20108\20803\25628\23563\27193\20013\21034\38500\19968\20491\20540\26178\65292\25105\20497\21487\20197\20808\25214\21040\23427\65292\20877\25226\31680\40670\21034\38500\12290"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "bool"
          , Space
          , Str "Delete_Val(node"
          , Space
          , Str "*&root,"
          , Space
          , Str "int"
          , Space
          , Str "val)"
          , Span
              ( "" , [] , [] )
              [ SoftBreak
              , Str "return"
              , Space
              , Str "Delete(root,"
              , Space
              , Str "Find(root,"
              , Space
              , Str "val));"
              , SoftBreak
              ]
          ]
      ]
  , Header
      3
      ( "\39636\39511\20108\20803\25628\23563\27193\30340\32654\22909"
      , []
      , []
      )
      [ Str
          "\39636\39511\20108\20803\25628\23563\27193\30340\32654\22909"
      ]
  , Para
      [ Str
          "\25972\20491\20108\20803\25628\23563\27193\30340\31243\24335\30908\22312\27492\65306"
      , SoftBreak
      , Link
          ( "" , [ "uri" ] , [] )
          [ Str "https://pastebin.com/ED77CYHV" ]
          ( "https://pastebin.com/ED77CYHV" , "" )
      ]
  , Div
      ( "" , [ "prbox" ] , [] )
      [ Para
          [ Span
              ( "" , [] , [] )
              [ Str "\20108\20803\25628\23563\27193"
              , Space
              , Str "(TRVBST)"
              , Space
              , Str "(TIOJ"
              , Space
              , Str "1609)"
              ]
          , SoftBreak
          , Str
              "\19968\20491\24207\21015\20381\29031\25554\20837\30340\38918\24207\21487\20197\25490\25104\35377\22810\19981\21516\30340\20108\20803\25628\23563\27193\65292\32780\32102\20320"
          , Math InlineMath "N"
          , Str "\20491\19981\21516\30340\25972\25976"
          , Math InlineMath "a_i"
          , Str
              "\65292\20381\24207\28858\25554\20837\30340\38918\24207\65292\35531\21839\25152\27083\25104\30340\20108\20803\25628\23563\27193\30340\20013\24207\36941\27511\28858\20309\65311\65288"
          , Math InlineMath "N \\leq 10^6"
          , Str "\65292"
          , Math InlineMath "-2^{30} \\leq a_i \\leq 2^{30}"
          , Str "\65289"
          ]
      ]
  , Div
      ( "" , [ "tcolorbox" ] , [] )
      [ Para
          [ Str
              "\20108\20803\27193\30340\34920\31034\26041\27861\65306\24819\35201\36664\20986\19968\20491\20108\20803\27193\65292\26377\19977\31278\27604\36611\24120\29992\30340\26041\27861\65306"
          ]
      , OrderedList
          ( 1 , DefaultStyle , DefaultDelim )
          [ [ Para
                [ Str
                    "\21069\24207\65306\20808\36664\20986\33258\24049\65292\20877\29031\33879\21069\24207\36664\20986\24038\23376\27193\65292\20877\29031\33879\21069\24207\36664\20986\21491\23376\27193"
                ]
            ]
          , [ Para
                [ Str
                    "\20013\24207\65306\20808\29031\33879\20013\24207\36664\20986\24038\23376\27193\65292\20877\36664\20986\33258\24049\65292\20877\29031\33879\20013\24207\36664\20986\21491\23376\27193"
                ]
            ]
          , [ Para
                [ Str
                    "\24460\24207\65306\20808\29031\33879\24460\24207\36664\20986\24038\23376\27193\65292\20877\29031\33879\24460\24207\36664\20986\21491\23376\27193\65292\20877\36664\20986\33258\24049"
                ]
            ]
          ]
      , Para
          [ Str
              "\20551\35373\29992\36889\20491\27193\20358\30070\20363\23376\65306"
          ]
      , Div
          ( "" , [ "center" ] , [] )
          [ Div
              ( "" , [ "forest" ] , [] )
              [ Para
                  [ Str "[1"
                  , SoftBreak
                  , Str "[2]"
                  , SoftBreak
                  , Str "[3"
                  , SoftBreak
                  , Str "[4]"
                  , SoftBreak
                  , Str "[5]"
                  , SoftBreak
                  , Str "]"
                  , SoftBreak
                  , Str "]"
                  ]
              ]
          ]
      , Para
          [ Str
              "\37027\21069\20013\24460\24207\20998\21029\28858\65306\&1"
          , Space
          , Str "2"
          , Space
          , Str "3"
          , Space
          , Str "4"
          , Space
          , Str "5\12289\&2"
          , Space
          , Str "1"
          , Space
          , Str "4"
          , Space
          , Str "3"
          , Space
          , Str "5\12289\&2"
          , Space
          , Str "4"
          , Space
          , Str "5"
          , Space
          , Str "3"
          , Space
          , Str "1\12290"
          ]
      ]
  , Header
      3
      ( "\20570\20107\30340\20195\20729" , [] , [] )
      [ Str "\20570\20107\30340\20195\20729" ]
  , Para
      [ Str
          "\29694\22312\25105\20497\35201\20998\26512\19968\19979\20197\19978\20171\32057\30340\36939\31639\30340\35079\38620\24230\65306\21487\20197\30693\36947\65292\22914\26524\36889\26869\27193\30340\39640\24230\28858"
      , Math InlineMath "h"
      , Str
          "\65288\26368\28145\30340\31680\40670\28145\24230\65289\65292\21063\26368\22750\30340\24773\27841\23601\26159\22312\25554\20837\25110\25628\23563\30340\26178\20505\65292\27599\27425\37117\36935\21040\26368\19979\38754\30340\31680\40670\65292\21063\35079\38620\24230"
      , Math InlineMath "O(h)"
      , Str "\12290\37027"
      , Math InlineMath "h"
      , Str
          "\22823\27010\26371\26159\22810\23569\21602\65311\21487\20197\35264\23519\65306\31532\19968\23652\26368\22810\21487\20197\26377\&1\20491\31680\40670\65292\31532\20108\23652\26368\22810\21487\20197\26377\&2\20491\31680\40670\65292\31532\19977\23652\26368\22810\21487\20197\26377\&4\20491\31680\40670......"
      , Space
      , Str "\31532"
      , Math InlineMath "k"
      , Str "\23652\26368\22810\21487\20197\26377"
      , Math InlineMath "2^{k-1}"
      , Str
          "\20491\31680\40670\65292\32317\20849\21487\20197\26377"
      , Math InlineMath "\\sum_{k = 1}^{h} 2^{k - 1} = 2^h - 1"
      , Str "\20491\31680\40670\65292\25152\20197"
      , SoftBreak
      , Math
          DisplayMath "n \\approx 2^h \\implies h \\approx \\log(n)"
      , SoftBreak
      , Str
          "\25152\20197\22914\26524\26159\19968\20491\22816\24179\34913\65288\24453\26371\26371\30475\19981\24179\34913\65289\30340\20108\20803\25628\23563\27193\65292\21063\25628\23563\21644\25554\20837\30340\35079\38620\24230\37117\26159"
      , Math InlineMath "O(\\log n)"
      , Str "\12290"
      ]
  , Div
      ( "" , [ "thm" ] , [] )
      [ Para
          [ Span
              ( "" , [] , [] )
              [ Str "\25628\23563\27193\30340\35079\38620\24230" ]
          , SoftBreak
          , Str "\32102\23450\19968\20491"
          , Math InlineMath "n"
          , Str
              "\20491\31680\40670\30340\38568\27231\29983\25104\30340\20108\20803\25628\23563\27193\65292\20854\25628\23563\21644\25554\20837\30340\24179\22343\35079\38620\24230\28858"
          , Math InlineMath "O(\\log n)"
          ]
      ]
  , Header
      4
      ( "\25972\20154\25628\23563\27193" , [] , [] )
      [ Str "\25972\20154\25628\23563\27193" ]
  , Para
      [ Str
          "\29694\22312\25105\20497\35201\23565\36889\20491\24207\21015\24314\31435\25628\23563\27193\65306"
      , Math InlineMath "[1, 2, 3, 4 \\cdots n]"
      , Str "\65292\37027\32080\26524\23559\26371\26159\65306"
      ]
  , Div
      ( "" , [ "center" ] , [] )
      [ Div
          ( "" , [ "forest" ] , [] )
          [ Para
              [ Str "[1"
              , SoftBreak
              , Str "[NULL]"
              , SoftBreak
              , Str "["
              , SoftBreak
              , Str "2"
              , SoftBreak
              , Str "[NULL]"
              , SoftBreak
              , Str "["
              , SoftBreak
              , Str "3"
              , SoftBreak
              , Str "[NULL]"
              , SoftBreak
              , Str "["
              , SoftBreak
              , Math InlineMath "\\cdots"
              , SoftBreak
              , Str "[NULL]"
              , SoftBreak
              , Str "["
              , SoftBreak
              , Math InlineMath "n"
              , SoftBreak
              , Str "]"
              , SoftBreak
              , Str "]"
              , SoftBreak
              , Str "]"
              , SoftBreak
              , Str "]"
              , SoftBreak
              , Str "]"
              ]
          ]
      ]
  , Para
      [ Str "\36889\31278\24773\27841\31281\28858"
      , Strong [ Str "\36864\21270" ]
      , Str "\12290\36889\27171\23376\21602\65292"
      , Math InlineMath "h = n"
      , Str
          "\32780\25628\23563\21644\25554\20837\37117\35722\24456\21487\24754\30340"
      , Math InlineMath "O(n)"
      , Str
          "\20102\12290\20197\24460\26371\23416\21040\22914\20309\36991\20813\36889\20491\29376\27841\65292\29694\22312\36935\21040\23601\31048\31153\38988\30446\26159\38568\27231\29986\29983\19981\26371\25630\20320\23601\22909\20102\65281"
      ]
  , Div
      ( "" , [ "tcolorbox" ] , [] )
      [ Para
          [ Str
              "\24179\26178\35201\22810\20570\22909\20107\65292\25165\19981\26371\27604\36093\30340\26178\20505\34987\28204\36039\38647(X"
          , LineBreak
          , Str
              "\28204\36039\19968\23450\26371\24819\36774\27861\21345\25481\36889\20491\65292\25152\20197\25165\38656\35201\24179\34913\20108\20803\27193(O"
          ]
      ]
  , Header
      2
      ( "\38598\21512-set" , [] , [] )
      [ Str "\38598\21512" , Space , Str "(Set)" ]
  , Para
      [ Str "\36889\26159STL\25552\20379\30340Binary"
      , Space
      , Str "Search"
      , Space
      , Str
          "Tree\65292\20839\37096\23526\20316\26159\22081\24515\30340\32005\40657\27193\65288Red-Black"
      , Space
      , Str
          "Tree\65289\65292\26159\19968\20491\23526\20316\35079\38620\65288\25152\20197\30452\25509\29992\65289\20294\26159\21487\20197\33258\21205\24179\34913\36991\20813\36864\21270\30340\36039\26009\32080\27083\12290STL\24050\32147\24171\20320\23526\20316\20986\20358\20102\65292\29992\23601\22909\20102\65281\8216set\8216"
      , Space
      , Str
          "\35041\38754\30340\26481\35199\19981\33021\26377\37325\35079\65292\25554\20837\12289\26597\35426\12289\21034\38500\30340\35079\38620\24230\37117\26159"
      , Math InlineMath "O(\\log n)"
      , Str
          "\12290\30475\20197\19979\31243\24335\29255\27573\65306"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "set<int>"
          , Space
          , Str "se;"
          , Space
          , Str "//"
          , Space
          , Str
              "\23459\21578\19968\20491\20803\32032\22411\21029\28858"
          , Space
          , Str "int"
          , Space
          , Str "\30340\38598\21512"
          , SoftBreak
          , Str "se.insert(1);"
          , Space
          , Str "//"
          , Space
          , Str "\25554\20837\20803\32032"
          , Space
          , Str "1"
          , SoftBreak
          , Str "se.insert(2);"
          , SoftBreak
          , Str "se.insert(5);"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "se.count(1)"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , Space
          , Str "//"
          , Space
          , Str "\26597\25214\20803\32032\65292true"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "se.count(3)"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , Space
          , Str "//"
          , Space
          , Str "false"
          , SoftBreak
          , Str "se.erase(1);"
          , Space
          , Str "//"
          , Space
          , Str
              "\21034\38500\20803\32032\65292\33509\38598\21512\20839\19981\21547\27492\20803\32032\21063\22238\20659"
          , Space
          , Str "false"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "*se.find(3)"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , SoftBreak
          , Str "//"
          , Space
          , Str "find()"
          , Space
          , Str "\22238\20659"
          , Space
          , Str
              "iterator\65292\33509\25214\19981\21040\21063\22238\20659"
          , Space
          , Str "se.end()"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "*se.lower_bound(3)"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "*se.upper_bound(3)"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , SoftBreak
          , Str "//"
          , Space
          , Str "\22240\28858"
          , Space
          , Str "set"
          , Space
          , Str
              "\26377\24207\65292\25152\20197\20063\25903\25588\20108\20998\25628\25805\20316"
          ]
      ]
  , Header
      3 ( "multiset" , [] , [] ) [ Str "\8216multiset\8216" ]
  , Para
      [ Str
          "STL\20063\25903\25588\21487\20197\37325\35079\20803\32032\30340\38598\21512\65292\29992\27861\33287\8216set\8216\24046\19981\22810\65306"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "multiset<int>"
          , Space
          , Str "se;"
          , Space
          , Str "//"
          , Space
          , Str
              "\23459\21578\19968\20491\20803\32032\22411\21029\28858"
          , Space
          , Str "int"
          , Space
          , Str "\30340"
          , Space
          , Str "multiset"
          , SoftBreak
          , Str "se.insert(1);"
          , Space
          , Str "//"
          , Space
          , Str "\25554\20837\20803\32032"
          , Space
          , Str "1"
          , SoftBreak
          , Str "se.insert(1);"
          , Space
          , Str "//"
          , Space
          , Str "\21487\20197\37325\35079\25554\20837"
          , SoftBreak
          , Str "se.insert(5);"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "se.count(1)"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , Space
          , Str "//"
          , Space
          , Str "\35336\31639\20803\32032\20491\25976\65292\&2"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "se.count(3)"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , Space
          , Str "//"
          , Space
          , Str "0"
          , SoftBreak
          , Str "se.erase(1);"
          , SoftBreak
          , Str "//"
          , Space
          , Str "\19968\27425\21034\38500\25152\26377\20803\32032"
          , Space
          , Str
              "1\65292\33509\38598\21512\20839\19981\21547\27492\20803\32032\21063\22238\20659"
          , Space
          , Str "false"
          , SoftBreak
          , Str "se.erase(find(5))"
          , Space
          , Str "//"
          , Space
          , Str "\19968\27425\21034\38500\19968\20491\20803\32032"
          , Space
          , Str "5"
          ]
      ]
  , Para
      [ Str
          "\30070\28982\65292\8216set\8216\33287\8216multiset\8216\20063\25903\25588\8216size()\8216\33287\8216empty()\8216\65292\22312\27492\19981\20570\36101\36848\20102\12290"
      ]
  , Header
      3
      ( "set\30340\36941\27511" , [] , [] )
      [ Str "\8216set\8216\30340\36941\27511" ]
  , Para
      [ Str
          "\8216set\8216\26159\19968\26869\20108\20803\25628\23563\27193\65292\30070\28982\21487\20197\36914\34892\36941\27511\30340\25805\20316\12290STL\30340\20108\20803\25628\23563\27193\27794\36774\27861\23384\21462\19968\20491\23376\27193\30340\24038\21491\31680\40670\65292\19981\36942STL\25552\20379\20102\36845\20195\22120(iterator)\65292\21487\20197\29992\19981\21516\30340\26041\24335\36914\34892\36941\27511\12290"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "for(set<int>::iterator"
          , Space
          , Str "it"
          , Space
          , Str "="
          , Space
          , Str "se.begin();"
          , Space
          , Str "it"
          , Space
          , Str "!="
          , Space
          , Str "se.end();"
          , Space
          , Str "it++)"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "*it"
          , Space
          , Str "<<"
          , Space
          , Str "\8217"
          , Space
          , Str "\8217;"
          ]
      ]
  , Para
      [ Str "\25110\32773\29992C++11\24460\25552\20379\30340"
      , Space
      , Str "\8216auto\8216"
      , Space
      , Str "\38364\37749\23383\36914\34892\23563\35370"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "for(auto"
          , Space
          , Str "&val:"
          , Space
          , Str "se)"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "val"
          , Space
          , Str "<<"
          , Space
          , Str "\8217"
          , Space
          , Str "\8217;"
          ]
      ]
  , Header
      3 ( "\32722\38988-2" , [] , [] ) [ Str "\32722\38988" ]
  , Para [ Str "\19981\35201\34987\26775\65281" ]
  , Div
      ( "" , [ "prbox" ] , [] )
      [ Para
          [ Span
              ( "" , [] , [] )
              [ Str "\20170\26202\25171\32769\34382"
              , Space
              , Str "(ZJ"
              , Space
              , Str "a091)"
              ]
          , SoftBreak
          , Str
              "\22869\36784\25214\21040\20102\19968\20491\31070\22855\30340\27231\22120\65292\21487\20197\20570\19977\20214\20107\65306"
          ]
      , OrderedList
          ( 1 , DefaultStyle , DefaultDelim )
          [ [ Para
                [ Str "\8216INSERT"
                , Space
                , Str "\8216"
                , Space
                , Math InlineMath "x"
                , Str
                    "\65292\20063\23601\26159\25226\19968\20491\25976\23383\36664\20837\36914\21435\36889\20491\27231\22120"
                ]
            ]
          , [ Para
                [ Str "\8216QUERY"
                , Space
                , Str
                    "MIN\8216\65292\20063\23601\26159\26597\35426\30446\21069\30340\26368\23567\20540"
                ]
            ]
          , [ Para
                [ Str "\8216QUERY"
                , Space
                , Str
                    "MAX\8216\65292\21516\19978\65292\26597\35426\30446\21069\30340\26368\22823\20540"
                ]
            ]
          ]
      , Para
          [ Str "\32780\19988\65292"
          , Strong
              [ Str
                  "\21482\35201\19968\20491\25976\23383\34987\26597\35426\36942\20102\65292\27231\22120\23601\26371\25226\20182\21520\20986\20358\65292\20195\34920\19981\22312\27231\22120\20013\20102\65281"
              ]
          , Str
              "\21516\19968\26178\38291\20839\19981\26371\36229\36942"
          , Math InlineMath "10^6"
          , Str
              "\20491\25976\23383\65292\19988\25976\23383\21487\20197\34987\8216int\8216\23384\19979\12290"
          ]
      ]
  , Div
      ( "" , [ "prbox" ] , [] )
      [ Para
          [ Span
              ( "" , [] , [] )
              [ Str "\22909\22810\29128\27873"
              , Space
              , Str "(TIOJ"
              , Space
              , Str "1513)"
              ]
          , SoftBreak
          , Str
              "\24456\26371\25214\26481\35199\30340\22869\36784\25214\21040\20102\19968\24373\32025\26781\65306\19978\38754\23531\20102"
          , Math InlineMath "N"
          , Str
              "\20491\25976\23383\65281\20182\22312\19968\20491\24456\22810\29128\27873\21644\38283\38364\30340\25151\38291\35041\65292\27599\19968\20491\29128\27873\21644\38283\38364\37117\26377\32232\34399\65292\34987\30456\21516\32232\34399\30340\38283\38364\25152\25511\21046\12290\19968\38283\22987\27599\19968\30430\29128\37117\26159\38364\30340\12290\29694\22312\65292\32025\24373\19978\23531\20102\25976\23383\20195\34920\25805\20316\38918\24207\65292\31532"
          , Math InlineMath "i"
          , Str
              "\20491\25976\23383\20195\34920\35201\21435\25805\20316\31532"
          , Math InlineMath "i"
          , Str

          , Math InlineMath "N"
          , Str "\21644"
          , Math InlineMath "N"
          , Str
              "\20491\25351\20196\65292\36664\20986\21738\19968\20491\29128\27873\26368\24460\20142\33879\12290\65288"
          , Math InlineMath "N \\leq 10^5"
          , Str "\65289"
          , LineBreak
          , Str "\35387\65306\20063\21487\20197\24819\24819"
          , Math InlineMath "O(n)"
          , Str "\35299\21908"
          , Space
          , Str "><"
          ]
      ]
  , Header
      2
      ( "\26144\23556-map" , [] , [] )
      [ Str "\26144\23556" , Space , Str "(Map)" ]
  , Para
      [ Str
          "\22522\26412\19978\36319\19978\38754\30340\19968\27171\65292\21487\26159\19981\26159\23384\25976\23383\32780\26159\23384\20841\20491\20540\65292\8216key\8216\21644\8216value\8216\65288\20063\23601\26159\23384\19968\20491\8216pair\8216\65292\31532\19968\20491\23384\8216key"
      , Space
      , Str
          "\8216\65292\31532\20108\20491\23384\8216value\8216\12290\32005\40657\27193\20381\29031\8216key\8216\25490\21015\65292\25152\20197\26159\20381\29031\8216key"
      , Space
      , Str
          "\8216\25628\23563\12290\29992\34389\39006\20284\19968\20491\21487\20197\23384\20219\20309\26481\35199\65292\35079\38620\24230\31245\24494\39640\19968\40670\65288\21516\19978\65289\30340\38499\21015\12290\36319\8216set\8216\19968\27171\65292\8216map\8216\30340\8216key\8216\20540\19981\33021\26377\37325\35079\12290"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "map<string,int>"
          , Space
          , Str "mapp;"
          , SoftBreak
          , Str "//"
          , Space
          , Str "\23459\21578\19968\20491\30001"
          , Space
          , Str "string"
          , Space
          , Str "\26144\23556\21040"
          , Space
          , Str "int"
          , Space
          , Str "\30340"
          , Space
          , Str "map"
          , SoftBreak
          , Str "mapp.insert("
          , Span
              ( "" , [] , [] ) [ Str "\"apple\"," , Space , Str "1" ]
          , Str ");"
          , SoftBreak
          , Str "//"
          , Space
          , Str "\25554\20837\19968\20491"
          , Space
          , Str "key"
          , Space
          , Str "\20540\28858"
          , Space
          , Str "\"apple\""
          , Space
          , Str "\30340\31680\40670"
          , SoftBreak
          , Str "mapp[\"book\"]"
          , Space
          , Str "="
          , Space
          , Str "2;"
          , Space
          , Str "//"
          , Space
          , Str "\20063\21487\20197\36889\27171\25554\20837"
          , SoftBreak
          , Str "mapp[\"apple\"]"
          , Space
          , Str "="
          , Space
          , Str "3;"
          , Space
          , Str "//"
          , Space
          , Str "\25913\20540"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "mapp.count(\"apple\")"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , Space
          , Str "//"
          , Space
          , Str "true"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "mapp.count(\"my"
          , Space
          , Str "girlfriend\")"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , Space
          , Str "//"
          , Space
          , Str "false"
          ]
      , Para
          [ Str "for(map<string,int>::iterator"
          , Space
          , Str "it"
          , Space
          , Str "="
          , Space
          , Str "mapp.begin();"
          , Space
          , Str "it"
          , Space
          , Str "!="
          , Space
          , Str "mapp.end();"
          , Space
          , Str "it++)"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "it->first"
          , Space
          , Str "<<"
          , Space
          , Str "\8217"
          , Space
          , Str "\8217"
          , Space
          , Str "<<"
          , Space
          , Str "it->second"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          ]
      , Para
          [ Str "for(auto"
          , Space
          , Str "&val:"
          , Space
          , Str "mapp)"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "val.first"
          , Space
          , Str "<<"
          , Space
          , Str "\8217"
          , Space
          , Str "\8217"
          , Space
          , Str "<<"
          , Space
          , Str "val.second"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          ]
      , Para
          [ Str "//"
          , Space
          , Str "apple"
          , Space
          , Str "3"
          , SoftBreak
          , Str "//"
          , Space
          , Str "book"
          , Space
          , Str "2"
          ]
      ]
  , Div
      ( "" , [ "tcolorbox" ] , [] )
      [ Para
          [ Str
              "\22914\26524\35201\30475\19968\20491\8216map\8216\35041\38754\30340\26481\35199\65292\20294\26159\19981\30906\23450\23427\23384\19981\23384\22312\65288\20687\26159\20197\19979\31243\24335\65289"
          , LineBreak
          , Str "\8216if(mapp[\"orange\"]"
          , Space
          , Str "=="
          , Space
          , Str "2)"
          , Space
          , Str "//...\8216"
          , LineBreak
          , Str
              "\37027\8216mapp\8216\23601\26371\20808\38283\19968\20491key\28858\8216orange\8216\30340\40670\65292\20308\31354\38291\65281\25152\20197\35201\20808\21028\26039\23384\19981\23384\22312\65306"
          , LineBreak
          , Str "\8216if(mapp.count(\"orange\")"
          , Space
          , Str "&&"
          , Space
          , Str "mapp[\"orange\"]"
          , Space
          , Str "=="
          , Space
          , Str "2)"
          , Space
          , Str "//...\8216"
          , LineBreak
          , Str
              "\25165\19981\26371\28010\36027\35377\22810\19981\24517\35201\30340\35352\25014\39636\12290"
          ]
      ]
  , Header
      3 ( "multimap" , [] , [] ) [ Str "\8216multimap\8216" ]
  , Para
      [ Str
          "\21516\27171\30340STL\20063\26377\8216multimap\8216\36889\31278\26481\35199\65292\30446\21069\25105\36996\24819\19981\21040\23526\38555\25033\29992\65292\24819\30693\36947\35443\32048\30340\21487\20197\30475"
      , Space
      , Str "cpp"
      , Space
      , Str "reference\12290"
      ]
  , Div
      ( "" , [ "eericbox*" ] , [] )
      [ Para
          [ Str "\65306\30693\36947\8216"
          , Space
          , Str "multimap"
          , Space
          , Str
              "\8216\30340\25033\29992\30340\20154\40635\29033\31169\35338\25105\65292\31558\32773\24863\28608\19981\30433"
          , Space
          , Str "OwO"
          ]
      ]
  , Header
      3 ( "\32722\38988-3" , [] , [] ) [ Str "\32722\38988" ]
  , Para
      [ Str "\8216map\8216"
      , Space
      , Str
          "\26159\20491\22909\29992\30340\26481\35199\21908\65281"
      ]
  , Div
      ( "" , [ "prbox" ] , [] )
      [ Para
          [ Span
              ( "" , [] , [] )
              [ Str "Hardwood"
              , Space
              , Str "Species\65288UVa"
              , Space
              , Str "10226\65289"
              ]
          , SoftBreak
          , Str
              "\24685\21916\25104\28858\26862\26519\31649\29702\32773\65281\29694\22312\20320\30340\31532\19968\20491\24037\20316\23601\26159\35336\31639\26862\26519\20013\27193\30340\27604\20363\12290\26377"
          , Math InlineMath "N"
          , Str
              "\26869\27193\65292\32102\20320\20182\20497\30340\33521\25991\21517\31281\65288\30001\22823\23567\23531\33521\25991\23383\27597\34920\31034\65289\65292\35531\36664\20986\20182\20497\25152\20308\30340\27604\20363\28858\20309\12290\65288\27604\20363\23450\32681\28858\65306"
          , Math
              InlineMath
              "\\frac{\\text{\27193\20986\29694\30340\27425\25976}}{N}"
          , Str "\65289\65292\65288\33267\22810"
          , Math InlineMath "10^4"
          , Str "\31278\27193\12289"
          , Math InlineMath "10^6"
          , Str
              "\26869\27193\65292\35531\36664\20986\33267\23567\25976\40670\24460\22235\20301\12290\65289"
          ]
      ]
  , Div
      ( "" , [ "prbox" ] , [] )
      [ Para
          [ Span
              ( "" , [] , [] )
              [ Str "\36899\36890\22602\25976\37327"
              , Space
              , Str "(OJDL)"
              ]
          , SoftBreak
          , Str "\32102\24179\38754\19978"
          , Math InlineMath "N"
          , Str "\20491\40670("
          , Math InlineMath "N\\leq 10^6"
          , Str ")\30340"
          , Math InlineMath "x,y"
          , Str "\22352\27161("
          , Math InlineMath "x,y\\leq 10^9"
          , Str ")\12290\33509\20841\20491\40670\30340"
          , Math InlineMath "x"
          , Str "\22352\27161\25110"
          , Math InlineMath "y"
          , Str "\22352\27161\21482\24046"
          , Math InlineMath "1"
          , Str
              "\21487\20197\35222\28858\21516\19968\20491\36899\36890\22602\65292\27714\36899\36890\22602\25976\37327\12290"
          ]
      ]
  , Header
      2
      ( "\22534\31309-heap" , [] , [] )
      [ Str "\22534\31309" , Space , Str "(Heap)" ]
  , Para
      [ Strong [ Str "\22534\31309" ]
      , Str
          "\30340\23450\32681\27604\36611\19981\33021\26395\25991\29983\32681\65306\23427\20063\26159\19968\20491\20108\20803\27193\65292\21487\26159\19981\28415\36275\20197\19978\30340\20108\20803\25628\23563\27193\24615\36074\65292\32780\26159\31526\21512\22534\31309\24615\36074\65306\23565\26044\19968\20491Min-Heap\65292\19968\20491\31680\40670\30340\20540\19968\23450\27604\20854\23376\27193\30340\27599\19968\20491\31680\40670\30340\20540\37117\23567\65292\23565\26044\19968\20491Max-Heap\65292\21063\26159\37117\22823\12290\36996\26377\19968\20491\37325\35201\30340\24615\36074\23601\26159\65306\36890\24120\23526\20316\30340\26178\20505\26371\25226\36889\20491\27193\30070\25104\19968\20491"
      , Strong [ Str "\23436\20840\20108\20803\27193" ]
      , Str
          "\65288\20063\23601\26159\38500\20102\26368\24460\19968\38542\21487\33021\19981\22635\28415\20854\20182\37117\28415\65289\30340\27193\65292\36889\20491\22909\34389\23601\26159\21487\20197\29992\38499\21015\23384\36889\20491\27193\12290"
      ]
  , Div
      ( "" , [ "thm" ] , [] )
      [ Para
          [ Span
              ( "" , [] , [] )
              [ Str "\29992\38499\21015\23384\20108\20803\27193" ]
          , SoftBreak
          , Str
              "\32102\23450\19968\20491\38499\21015\65292\21487\20197\29992\38499\21015\20358\23384\20108\20803\27193\65292\32232\34399\23601\26159BFS\38918\24207\65288\25110\32773\30333\35441\19968\40670\23601\26159\27243\33879\32232\34399\65289\65306"
          ]
      , Div
          ( "" , [ "center" ] , [] )
          [ Div
              ( "" , [ "forest" ] , [] )
              [ Para
                  [ Str "[1"
                  , SoftBreak
                  , Str "[2"
                  , SoftBreak
                  , Str "[4"
                  , SoftBreak
                  , Str "["
                  , Math InlineMath "\\vdots"
                  , Str "]"
                  , SoftBreak
                  , Str "["
                  , Math InlineMath "\\vdots"
                  , Str "]"
                  , SoftBreak
                  , Str "]"
                  , SoftBreak
                  , Str "[5"
                  , SoftBreak
                  , Str "["
                  , Math InlineMath "\\vdots"
                  , Str "]"
                  , SoftBreak
                  , Str "["
                  , Math InlineMath "\\vdots"
                  , Str "]"
                  , SoftBreak
                  , Str "]"
                  , SoftBreak
                  , Str "]"
                  , SoftBreak
                  , Str "[3"
                  , SoftBreak
                  , Str "[6"
                  , SoftBreak
                  , Str "["
                  , Math InlineMath "\\vdots"
                  , Str "]"
                  , SoftBreak
                  , Str "["
                  , Math InlineMath "\\vdots"
                  , Str "]"
                  , SoftBreak
                  , Str "]"
                  , SoftBreak
                  , Str "[7"
                  , SoftBreak
                  , Str "["
                  , Math InlineMath "\\vdots"
                  , Str "]"
                  , SoftBreak
                  , Str "["
                  , Math InlineMath "\\vdots"
                  , Str "]"
                  , SoftBreak
                  , Str "]"
                  , SoftBreak
                  , Str "]"
                  , SoftBreak
                  , Str "]"
                  ]
              ]
          ]
      , Para
          [ Str
              "\32147\35264\23519\21487\20197\30332\29694\65306\32232\34399\28858"
          , Math InlineMath "i"
          , Str "\30340\31680\40670\24038\31680\40670\28858"
          , Math InlineMath "2i"
          , Str "\65292\21491\31680\40670\28858"
          , Math InlineMath "2i + 1"
          , Str "\65292\32780\20854\29238\31680\40670\28858"
          , Math InlineMath "\\lfloor \\frac{i}{2} \\rfloor"
          , Str
              "\12290\22914\26524\26159\23436\20840\20108\20803\27193\65292\23601\21487\20197\30332\29694\21482\38656\35201"
          , Math InlineMath "O(n)"
          , Str
              "\30340\31354\38291\20358\23384\65307\20294\26159\22914\26524\36864\21270\25104\37706\21487\23601\31967\31957\20102\65306\38656\35201"
          , Math InlineMath "O(2^n)"
          , Str
              "\30340\31354\38291\23384\65292\25152\20197\35201\21462\25448\12290\36889\20491\27010\24565\19981\21482\22312\36889\20491Heap\20013\26371\29992\21040\65292\25152\20197\24471\29544\31435\20986\20358\35611\65281"
          ]
      ]
  , Para
      [ Str
          "\39023\28982\65292\23565\26044\19968\20491\25976\23383\30340\38598\21512\65292\20063\26371\26377\35377\22810\30340Min(Max)"
      , Space
      , Str
          "Heap\21487\33021\12290\20197\19979\25152\35611\30340Heap\30342\25351Min-Heap\65292\33267\26044Max-Heap\30340\23526\20316\23601\21482\26159\25226\19981\31561\34399\21453\36942\20358\23601\22909\20102\12290\35201\25903\25588\30340\25805\20316\27604\36611\22810\65292\20197\19979\21015\20986\20358\20043\24460\25105\20497\24930\24930\25581\26313\12290\26368\24460\30340\31680\40670\25351\30340\26159\26368\24460\19968\23652\26368\21491\37002\30340\31680\40670\12290"
      ]
  , OrderedList
      ( 1 , DefaultStyle , DefaultDelim )
      [ [ Para
            [ Str "\8216int"
            , Space
            , Str
                "getMin()\8216\65292\20195\34920\22238\20659\22534\30090\26681\31680\40670\30340\20540\65288\20063\23601\26159\26368\23567\20540\65289\65292\35079\38620\24230"
            , Math InlineMath "O(1)"
            , Str "\12290"
            ]
        , Div
            ( "" , [ "C++" ] , [] )
            [ Para
                [ Str "int"
                , Space
                , Str "getMin(vector<int>"
                , Space
                , Str "&heap)"
                , Space
                , Span
                    ( "" , [] , [] )
                    [ SoftBreak
                    , Str "if(heap.empty())"
                    , SoftBreak
                    , Str "printf(\"Are"
                    , Space
                    , Str "you"
                    , Space
                    , Str "kidding?\");"
                    , SoftBreak
                    , Str "else"
                    , Space
                    , Str "return"
                    , Space
                    , Str "heap[0];"
                    , SoftBreak
                    ]
                ]
            ]
        ]
      , [ Para
            [ Str "\8216void"
            , Space
            , Str "insert(int"
            , Space
            , Str "x)"
            , Space
            , Str "\8216"
            , Space
            , Str "\35201\21152\20837\19968\20491\20540\28858"
            , Math InlineMath "x"
            , Str
                "\30340\25976\23383\36914\21435Heap\35041\38754\12290\20316\27861\23601\26159\20808\23559"
            , Math InlineMath "x"
            , Str
                "\20808\19999\36914\21435\26368\19979\38754\65292\28982\24460\19968\30452\24448\19978\65292\21482\35201\30332\29694"
            , Math InlineMath "x"
            , Str
                "\29694\22312\30340\31680\40670\27604\20854\29238\31680\40670\30340\20540\23567\65292\23601\20132\25563\20182\20497\20841\20491\65292\20006\32380\32396\30475\12290"
            ]
        , Div
            ( "" , [ "C++" ] , [] )
            [ Para
                [ Str "void"
                , Space
                , Str "Insert(vector<int>"
                , Space
                , Str "&heap,"
                , Space
                , Str "int"
                , Space
                , Str "x)"
                , Space
                , Span
                    ( "" , [] , [] )
                    [ SoftBreak
                    , Str "heap.push_back(x);"
                    , SoftBreak
                    , Str "int"
                    , Space
                    , Str "loc"
                    , Space
                    , Str "="
                    , Space
                    , Str "heap.size()-1;"
                    , SoftBreak
                    , Str "while(loc)"
                    , Span
                        ( "" , [] , [] )
                        [ SoftBreak
                        , Str "if(heap[loc]"
                        , Space
                        , Str "<"
                        , Space
                        , Str "heap[loc>>1])"
                        , SoftBreak
                        , Str "swap(heap[loc],"
                        , Space
                        , Str "heap[loc>>1]);"
                        , SoftBreak
                        , Str "loc"
                        , Space
                        , Str ">>="
                        , Space
                        , Str "1;"
                        , SoftBreak
                        ]
                    , SoftBreak
                    ]
                ]
            ]
        ]
      , [ Para
            [ Str "\8216void"
            , Space
            , Str "deleteRoot(int"
            , Space
            , Str "x)"
            , Space
            , Str "\8216"
            , Space
            , Str
                "\21034\38500\26681\31680\40670\12290\23559\26681\25563\25104\26368\24460\30340\31680\40670\65288\26368\24460\30340\31680\40670\20063\21034\25481\65289\65292\28982\24460\38283\22987\36958\36852\24448\19979\65306\22914\26524\30446\21069\30340\20540\27604\24038\21491\23376\27193\30340\26368\23567\20540\22823\65292\21063\33287\24038\21491\23376\27193\30340\26368\23567\20540\20132\25563\65292\20006\19988\24448\37027\20491\23376\27193\36958\36852\19979\21435\12290"
            ]
        , Div
            ( "" , [ "C++" ] , [] )
            [ Para
                [ Str "void"
                , Space
                , Str "deleteRoot(vector<int>"
                , Space
                , Str "&heap)"
                , Space
                , Span
                    ( "" , [] , [] )
                    [ SoftBreak
                    , Str "swap(heap[0],"
                    , Space
                    , Str "heap[heap.size()-1]);"
                    , SoftBreak
                    , Str "heap.pop_back();"
                    , SoftBreak
                    , Str "int"
                    , Space
                    , Str "pos"
                    , Space
                    , Str "="
                    , Space
                    , Str "0;"
                    , SoftBreak
                    , Str "while(pos"
                    , Space
                    , Str "<"
                    , Space
                    , Str "heap.size())"
                    , Space
                    , Span
                        ( "" , [] , [] )
                        [ SoftBreak
                        , Str "int"
                        , Space
                        , Str "l,"
                        , Space
                        , Str "r,"
                        , Space
                        , Str "Min;"
                        , SoftBreak
                        , Str "l"
                        , Space
                        , Str "="
                        , Space
                        , Str "(2*pos"
                        , Space
                        , Str ">="
                        , Space
                        , Str "heap.size())"
                        , Space
                        , Str "?"
                        , SoftBreak
                        , Str "INF"
                        , Space
                        , Str ":"
                        , Space
                        , Str "heap[2*pos];"
                        , SoftBreak
                        , Str "r"
                        , Space
                        , Str "="
                        , Space
                        , Str "(2*pos+1"
                        , Space
                        , Str ">="
                        , Space
                        , Str "heap.size())"
                        , Space
                        , Str "?"
                        , SoftBreak
                        , Str "INF"
                        , Space
                        , Str ":"
                        , Space
                        , Str "heap[2*pos+1];"
                        , SoftBreak
                        , Str "if(l"
                        , Space
                        , Str "=="
                        , Space
                        , Str "INF"
                        , Space
                        , Str "&&"
                        , Space
                        , Str "r"
                        , Space
                        , Str "=="
                        , Space
                        , Str "INF)"
                        , Space
                        , Str "break;"
                        , SoftBreak
                        , Str "Min"
                        , Space
                        , Str "="
                        , Space
                        , Str "(l"
                        , Space
                        , Str "<"
                        , Space
                        , Str "r)"
                        , Space
                        , Str "?"
                        , Space
                        , Str "2*pos"
                        , Space
                        , Str ":"
                        , Space
                        , Str "2*pos+1;"
                        , SoftBreak
                        , Str "if(heap[Min]"
                        , Space
                        , Str "<"
                        , Space
                        , Str "heap[pos])"
                        , SoftBreak
                        , Str "swap(heap[pos],"
                        , Space
                        , Str "heap[Min]),"
                        , Space
                        , Str "pos"
                        , Space
                        , Str "="
                        , Space
                        , Str "Min;"
                        , SoftBreak
                        , Str "else"
                        , Space
                        , Str "break;"
                        , SoftBreak
                        ]
                    , SoftBreak
                    ]
                ]
            ]
        ]
      ]
  , Para
      [ Str "\19981\38627\30332\29694\65292\8216insert()"
      , Space
      , Str "\8216\21644\8216deleteRoot()"
      , Space
      , Str "\8216\30340\35079\38620\24230\37117\26159"
      , Math InlineMath "O(\\log n)"
      , Str
          "\65292\22240\28858\26368\24046\23601\26159\19968\30452\36958\36852\21040\24213\65292\32780\22240\28858\26159\23436\20840\20108\20803\27193\65292\23601\26377"
      , Math InlineMath "O(\\log n)"
      , Str "\23652\12290"
      ]
  , Header
      3
      ( "\22312\36681\35282\33287\22534\31309\36994\36869"
      , []
      , []
      )
      [ Str "\22312\36681\35282\33287\22534\31309\36994\36869" ]
  , Para
      [ Str "\36889\26159code:"
      , Space
      , Link
          ( "" , [ "uri" ] , [] )
          [ Str "https://pastebin.com/zkaMe93Z" ]
          ( "https://pastebin.com/zkaMe93Z" , "" )
      ]
  , Header
      3
      ( "stl-\20839\30340heap" , [] , [] )
      [ Str "STL" , Space , Str "\20839\30340Heap" ]
  , Para
      [ Str
          "\30070\28982\65292\36229\26834\30340STL\26377\25552\20379Heap\21487\20197\29992\65292\31281\28858\8216priority_queue\8216\65292\20294\26159\19981\19968\23450\26159\20381\29031\20197\19978\30340\23526\20316\65292\21487\33021\26377\20986\20837\12290\22914\26524\24819\35201\30475\21478\22806\19968\31278\35079\38620\30340Heap\65292\21487\20197\21435\26597Fibonacci"
      , Space
      , Str "Heap\12290"
      ]
  , Header
      4 ( "\23459\21578" , [] , [] ) [ Str "\23459\21578" ]
  , Para
      [ Str
          "\25105\20497\21487\20197\29992\19979\21015\26041\27861\23459\21578\19968\20491\8216priority_queue\8216"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "priority_queue<int>"
          , Space
          , Str "pq;"
          , Space
          , Str "//"
          , Space
          , Str "\23459\21578\19968\20491\25972\25976\30340"
          , Space
          , Str "max-heap"
          ]
      ]
  , Para
      [ Str
          "\33509\35201\33258\34892\23450\32681\27604\36611\20989\25976(\20063\23601\26159\23450\32681\"\23567\26044\")\65292\21487\20197\19979\21015\26041\24335\36914\34892\65306"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "priority_queue<int,"
          , Space
          , Str "vector<int>,"
          , Space
          , Str "greater<int>"
          , Space
          , Str ">"
          , Space
          , Str "min_pq;"
          , SoftBreak
          , Str "//"
          , Space
          , Str
              "\25226\"\23567\26044\"\23450\32681\25104\"\22823\26044\"\65292\20063\23601\26159"
          , Space
          , Str "min-heap"
          , SoftBreak
          , Str "priority_queue<int,"
          , Space
          , Str "vector<int>,"
          , Space
          , Str "comp>"
          , Space
          , Str "custom_pq;"
          , SoftBreak
          , Str "//"
          , Space
          , Str "\33258\35330\32681\23567\26044\27604\36611"
          ]
      ]
  , Para
      [ Str
          "\8216priority_queue\8216\30340\27604\36611\20989\25976\31245\24494\35079\38620\19968\40670\65292\35201\29992"
      , Space
      , Str "\8216struct\8216"
      , Space
      , Str "\30340"
      , Space
      , Str "\8216operator()\8216"
      , Space
      , Str
          "\20358\23526\20316\65292\20197\19979\26159\23526\20316\26041\27861\65306"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "struct"
          , Space
          , Str "comp"
          , Span
              ( "" , [] , [] )
              [ SoftBreak
              , Str "bool"
              , Space
              , Str "operator()(int"
              , Space
              , Str "a,int"
              , Space
              , Str "b)"
              , Span
                  ( "" , [] , [] )
                  [ SoftBreak
                  , Str "return"
                  , Space
                  , Str "a"
                  , SoftBreak
                  ]
              , SoftBreak
              ]
          , Str ";"
          ]
      ]
  , Header
      4
      ( "\19977\20491\25805\20316" , [] , [] )
      [ Str "\19977\20491\25805\20316" ]
  , Para
      [ Str
          "STL\20839\24314\30340\8216priority_queue\8216\19968\27171\25903\25588\20102heap\35442\26377\30340\25805\20316\65306"
      , LineBreak
      , Str "\8216push()\8216"
      , Space
      , Str
          "\21487\20197\23559\36039\26009\19999\20837\22534\31309\30340\20839\37096\65307"
      , LineBreak
      , Str "\8216pop()\8216"
      , Space
      , Str "\23559\26368\22823\20803\32032\21034\38500\65307"
      , LineBreak
      , Str "\8216top()\8216"
      , Space
      , Str
          "\26597\35426\22534\31309\20839\30340\26368\22823\20803\32032\65307"
      , LineBreak
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "pq.push(3);"
          , SoftBreak
          , Str "pq.push(2);"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "pq.top()"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , Space
          , Str "//"
          , Space
          , Str "3"
          , SoftBreak
          , Str "pq.pop();"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "pq.top()"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , Space
          , Str "//"
          , Space
          , Str "2"
          ]
      ]
  , Para
      [ Str
          "\30070\28982\20063\25903\25588\26597\35426\36039\26009\32080\27083\30340\22823\23567\65306"
      , LineBreak
      , Str "\8216size\8216"
      , Space
      , Str
          "\20989\25976\26597\35426\30446\21069\36996\20301\26044\22534\30090\20013\30340\36039\26009\25976\65307"
      , LineBreak
      , Str "\8216empty\8216"
      , Space
      , Str
          "\20989\25976\22238\20659\22534\30090\26159\21542\28858\31354\12290"
      ]
  , Div
      ( "" , [ "tcolorbox" ] , [] )
      [ Para
          [ Str
              "\21315\33836\19981\35201\23565\19968\20491\31354\30340\8216priority_queue\8216\21628\21483"
          , Space
          , Str "top()"
          , Space
          , Str
              "\20989\25976\65292\19981\28982\20320\26371\21507\20491RE"
          ]
      ]
  , Header
      3 ( "\32722\38988-4" , [] , [] ) [ Str "\32722\38988" ]
  , Para
      [ Str
          "\19981\65292\31532\19968\38988\19981\26159DP\38988\65281"
      ]
  , Div
      ( "" , [ "prbox" ] , [] )
      [ Para
          [ Span
              ( "" , [] , [] )
              [ Str "Add"
              , Space
              , Str "All"
              , Space
              , Str "(UVa"
              , Space
              , Str "10954\12289ZJ"
              , Space
              , Str "d221)"
              ]
          , SoftBreak
          , Str "\32102\20320"
          , Math InlineMath "N"
          , Str "\20491\25976\23383"
          , Math InlineMath "a_1, a_2, \\cdots, a_N"
          , Str
              "\65292\35531\25226\36889\20123\25976\23383\21152\36215\20358\12290\24456\31777\21934\65311\20294\26159\20294\26159\65292\35201\21152\20841\20491\25976\23383"
          , Math InlineMath "x"
          , Str "\21644"
          , Math InlineMath "y"
          , Str
              "\26377\19968\20491\26781\20214\65306\24517\38920\20184\20986"
          , Math InlineMath "x + y"
          , Str
              "\30340\20195\20729\12290\35531\21839\35201\25226\36889"
          , Math InlineMath "N"
          , Str
              "\20491\25976\23383\21152\36215\20358\30340\26368\23567\20195\20729\28858\20309\65311\65288"
          , Math InlineMath "2 \\leq N \\leq 5000"
          , Str "\65289"
          , LineBreak
          , Str "\65288\20363\65306\22914\26524"
          , Math InlineMath "N = 3"
          , Str "\19988\25976\21015\28858"
          , Math InlineMath "[1, 2, 3]"
          , Str
              "\65292\21063\26368\22909\30340\20316\27861\23601\26159\20808\21152"
          , Math InlineMath "1"
          , Str "\21644"
          , Math InlineMath "2"
          , Str "\65292\33457"
          , Math InlineMath "3"
          , Str "\65292\20877\25226\20841\20491"
          , Math InlineMath "3"
          , Str "\21152\36215\20358\65292\33457\36027"
          , Math InlineMath "6"
          , Str "\65292\32317\20849\33457\36027"
          , Math InlineMath "3 + 6 = 9"
          , Str "\12290"
          ]
      ]
  , Div
      ( "" , [ "prbox" ] , [] )
      [ Para
          [ Span
              ( "" , [] , [] )
              [ Str "\25490\38538\36023\39154\26009"
              , Space
              , Str "(TIOJ"
              , Space
              , Str "1999)"
              ]
          , SoftBreak
          , Str
              "\26377\19968\22825\65292\20320\32147\36942\20102\19968\23478\39154\26009\24215\65292\30332\29694\26377"
          , Math InlineMath "N"
          , Str
              "\20491\20154\25490\38538\35201\36023\39154\26009\12290\19981\36942\65292\36889\23478\39154\26009\24215\20154\25163\20805\36275\65292\19968\20849\26377"
          , Math InlineMath "M"
          , Str
              "\20491\24215\21729\21487\20197\26381\21209\36889\20123\25490\38538\30340\20154\28526\12290"
          , SoftBreak
          , Str
              "\28858\20102\20844\24179\36215\35211\65292\38614\28982\24215\21729\24456\22810\65292\20294\26159\25490\38538\21482\25490\25104\19968\21015\65292\36991\20813\22312\25490\24456\22810\21015\30340\24773\27841\19979\65292\27599\21015\21069\36914\30340\36895\24230\26371\19981\19968\27171\12290"
          ]
      , Para
          [ Str
              "\21478\22806\65292\28858\20102\26381\21209\21697\36074\36215\35211\65292\36889\23478\24215\30340\24215\21729\24517\38920\36981\23432\20841\20491\35215\21063\65306\24517\38920\25353\29031\23458\20154\25490\38538\38918\24207\26381\21209\23458\20154\65292\19981\33021\20808\26381\21209\25490\22312\24460\38754\30340\39015\23458\65292\32780\19988\65292\22914\26524\26576\20491\24215\21729\26381\21209\20102\26576\20491\23458\20154\65292\21063\35442\23458\20154\40670\30340\25152\26377\39154\26009\37117\35201\30001\35442\24215\21729\35069\20316\65292\35069\20316\23436\25104\20043\24460\25165\33021\26381\21209\19979\19968\20301\23458\20154\12290"
          ]
      , Para
          [ Str
              "\20320\20570\20102\19968\19979\24066\22580\35519\26597\65292\35426\21839\27599\20301\25490\38538\30340\23458\20154\35201\36023\24190\26479\39154\26009\12290\20551\22914\25152\26377\30340\24215\21729\35069\20316\39154\26009\30340\36895\24230\37117\26159\27599\20998\37912\&1\26479\65292\22312\36981\23432\36889\20123\35215\21063\30340\21069\25552\19979\65292\35531\21839\26381\21209\23436\36889\20123\23458\20154\33267\23569\38656\35201\22810\20037\65311"
          ]
      , Para
          [ Str "\65288"
          , Math InlineMath "N \\leq 10^6"
          , Str "\12289"
          , Math InlineMath "M \\leq 10^4"
          , Str
              "\65292\36664\20837\23436\20102\20043\24460\26371\26377"
          , Math InlineMath "N"
          , Str
              "\20491\25976\23383\65292\28858\27599\20491\25490\38538\39015\23458\35201\36023\22810\23569\39154\26009\65288\26368\22810"
          , Math InlineMath "1000"
          , Str "\26479\65289"
          ]
      ]
  , Header
      2
      ( "\20301\20803\38598-bitset" , [] , [] )
      [ Str "\20301\20803\38598" , Space , Str "(Bitset)" ]
  , Para
      [ Str
          "\24456\22810\26178\20505\65292\26371\24819\35201\23384\24067\26519\38499\21015\65292\20294\26159\20320\21487\30693\36947\65306\19968\20491\24067\26519\20540\23621\28982\20308\20102\20843\20491\20301\20803\65311\65281\22914\26524\38988\30446\20986\27231\36554\19968\40670\22739\35352\25014\39636\21487\33021\23601\35201\29992\21040\36889\19968\25307\65306\8216bitset\8216\12290\23601\26159\19968\20491\21152\24375\29256\24067\26519\38499\21015\65292\38500\20102\32066\26044\35731\27599\19968\20491\24067\26519\20540\20308\19968\20491\20301\20803\65288\20063\23601\26159\31354\38291\20308\20843\20998\20043\19968\65289\20043\22806\36996\21152\20102\35377\22810\30340\21151\33021\65292\22914\21453\36681\65292\35722\25104\23383\20018\25110\25976\23383\65288\8216unsigned"
      , Space
      , Str "long"
      , Space
      , Str "long"
      , Space
      , Str
          "int\8216\20043\39006\30340\65289\30340\21151\33021\65281\35531\30475\20197\19979\31243\24335\29255\27573\12290"
      ]
  , Header
      3
      ( "\24314\27083\20803" , [] , [] )
      [ Str "\24314\27083\20803" ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "bitset<10>"
          , Space
          , Str "bs;"
          , Space
          , Str "//"
          , Space
          , Str "\23459\21578"
          , Space
          , Str "10-bit"
          , Space
          , Str
              "\30340\20301\20803\38598\65292\21021\22987\21270\28858"
          , Space
          , Str "0"
          , SoftBreak
          , Str "bitset<10>"
          , Space
          , Str "bsA(71);"
          , Space
          , Str "//"
          , Space
          , Str "\23559"
          , Space
          , Str "71"
          , Space
          , Str "\34920\31034\28858\20108\36914\21046\23384\20837"
          , SoftBreak
          , Str "bitset<10>"
          , Space
          , Str "bsB(\"1010111\");"
          , Space
          , Str "//"
          , Space
          , Str "\20063\21487\20197\36889\27171\21021\22987\21270"
          ]
      ]
  , Header
      3
      ( "\36939\31639\23376" , [] , [] )
      [ Str "\36939\31639\23376" ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "bsA"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , Space
          , Str "//"
          , Space
          , Str "\36664\20986"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "(bsA"
          , Space
          , Str "&"
          , Space
          , Str "bsB)"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , Space
          , Str "//"
          , Space
          , Str "AND"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "(bsA"
          , Space
          , Str "|"
          , Space
          , Str "bsB)"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , Space
          , Str "//"
          , Space
          , Str "OR"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "(bsA"
          , Space
          , Str "^"
          , Space
          , Str "bsB)"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , Space
          , Str "//"
          , Space
          , Str "XOR"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "\160bsA"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , Space
          , Str "//"
          , Space
          , Str "NOT"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "bsA[0]"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , Space
          , Str "//"
          , Space
          , Str "\19979\27161\36939\31639\23376"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "(bsA<<1)"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , Space
          , Str "//"
          , Space
          , Str "\24038\31227\21491\31227"
          ]
      ]
  , Header
      3
      ( "\35336\25976\25216\34899" , [] , [] )
      [ Str "\35336\25976\25216\34899" ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "bsA.size()"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , Space
          , Str "//"
          , Space
          , Str "\19968\38283\22987\23459\21578\30340bit\25976"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "bsA.count()"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , Space
          , Str "//"
          , Space
          , Str "\36664\20986\32317\20849\26377\24190\20491"
          , Space
          , Str "1"
          ]
      ]
  , Header
      3
      ( "\22411\21029\36681\25563" , [] , [] )
      [ Str "\22411\21029\36681\25563" ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "string"
          , Space
          , Str "s"
          , Space
          , Str "="
          , Space
          , Str "bsA.to_string();"
          , SoftBreak
          , Str "unsigned"
          , Space
          , Str "int"
          , Space
          , Str "x"
          , Space
          , Str "="
          , Space
          , Str "bsA.to_ulong();"
          ]
      ]
  , Header
      2
      ( "\38620\28234\34920-hash-table" , [] , [] )
      [ Str "\38620\28234\34920"
      , Space
      , Str "(Hash"
      , Space
      , Str "table)"
      ]
  , Para
      [ Str
          "\20808\35611\19968\19979\20309\35586\38620\28234\65288Hash\65289\65306\36889\20491\26159Hash"
      , Space
      , Str
          "Brown\65292\20013\25991\21483\20570\34223\39173\65306"
      ]
  , Div
      ( "" , [ "center" ] , [] )
      [ Para
          [ Image
              ( "" , [] , [ ( "width" , "70%" ) ] )
              [ Str "image" ]
              ( "images/hashbrown.jpg" , "" )
          ]
      ]
  , Para
      [ Str
          "\21487\26159\19981\26159\25105\20497\35201\30340\20027\38988\12290\25105\20497\35201\30340\26159"
      , Strong [ Str "\38620\28234\65288Hash\65289" ]
      , Str
          "\65281\20808\20358\30475\32173\22522\30334\31185\30340\23450\32681\65306"
      ]
  , Div
      ( "" , [ "tcolorbox" ] , [] )
      [ Para
          [ Str
              "\12300\38620\28234\20989\24335\65288\33521\35486\65306Hash"
          , Space
          , Str
              "functionhash"
          , Space
          , Str "values\65292hash"
          , Space
          , Str "codes\65292hash"
          , Space
          , Str
              "sums\65292\25110hashes\65289\30340\25351\32011\12290\38620\28234\20540\36890\24120\29992\19968\20491\30701\30340\38568\27231\23383\27597\21644\25976\23383\32068\25104\30340\23383\20018\20358\20195\34920\12290\12301"
          ]
      ]
  , Para
      [ Str
          "\31777\21934\20358\35498\65292\23601\26159\35731\19968\20491\24456\38627\34920\31034\30340\26481\35199\36879\36942\26576\20491\20989\25976\35722\25104\19968\20491\27604\36611\22909\34920\31034\30340\26481\35199\65281\20551\35373\24819\35201\23565\29983\26085\20358Hash\65292\37027\19968\20491\29983\26085\21487\33021\26159"
      , Math InlineMath "2002/11/05"
      , Str
          "\65292\19981\22909\34389\29702\65292\37027\25105\21487\33021\26371\22739\32302\25104\19968\20491\23383\20018\8216\"2002/11/05\"`\25110\34920\31034\25104\19968\20491"
      , Math InlineMath "b"
      , Str "\36914\20301\30340\25976\23383"
      , Math InlineMath "\\pmod p"
      , Str "\65292"
      , Math InlineMath "b"
      , Str "\65292"
      , Math InlineMath "p"
      , Str
          "\28858\30456\30064\36074\25976\20043\39006\30340\65292\23601\26159\28858\20102\26041\20415\23384\65292\32780\36889\20491\20989\25976\23601\21483\20570Hash"
      , Space
      , Str
          "Function\12290\39023\28982\65292\22914\26524Hash\20986\20358\30340\26481\35199\19981\19968\27171\65292\21063\20841\20491\26481\35199\19968\23450\19981\19968\27171\65307\20294\26159\22914\26524Hash\20986\20358\30340\26481\35199\19968\27171\65292\19981\20195\34920\26159\19968\27171\30340\12290\38614\28982\22914\27492\65292\20294\26159\22914\26524\22909\22909\36984Hash"
      , Space
      , Str
          "Function\65292\23601\21487\20197\36991\20813\30896\25758\65288Collision\65289\20102\12290\29694\22312\20358\20998\26512\36889\20491\21487\33021\24615\65306"
      ]
  , Div
      ( "" , [ "thm" ] , [] )
      [ Para
          [ Span ( "" , [] , [] ) [ Str "\38620\28234\30896\25758" ]
          , SoftBreak
          , Str "\20551\35373\19968\20491Hash"
          , Space
          , Str "Function\26377"
          , Math InlineMath "N"
          , Str "\20491\21487\33021\20540\65292\28982\24460\26377"
          , Math InlineMath "M"
          , Str
              "\20491\26481\35199\35201\34987\38620\28234\12290\27599\19968\20491\37117\30456\30064\30340\27231\29575\28858"
          , Math InlineMath "\\binom{N}{M} \\cdot \\frac{1}{N^M}"
          , Str
              "\65292\25925\26377\20986\29694\30896\25758\30340\27231\29575\28858"
          , Math InlineMath "1 - \\binom{N}{M} \\cdot \\frac{1}{N^M}"
          , Str "\12290\36889\20491\26371\38568\33879"
          , Math InlineMath "M"
          , Str
              "\32780\22686\21152\65292\25152\20197\22312\29992Hash\21069\24471\20808\31245\24494\20272\19968\19979\12290"
          ]
      ]
  , Para
      [ Str
          "\36889\20491\30340\23526\20316\26041\27861\36890\24120\26159\29992\19968\20491\38499\21015\20358\20570\65292\36889\27171\22343\25892\35079\38620\24230\21487\20197\21040"
      , Math InlineMath "O(1)"
      , Str "\26597\35426\65292"
      , Math InlineMath "O(1)"
      , Str
          "\20462\25913\12290\32173\25345\19968\20491\38263\24230\28858"
      , Math InlineMath "n"
      , Str "\30340\38499\21015"
      , Math InlineMath "A"
      , Str
          "\65292\27599\27425\35201\21152\20837\19968\20491\26481\35199"
      , Math InlineMath "k"
      , Str "\30340\26178\20505\65292\23601\25226"
      , Math InlineMath "k"
      , Str "\23384\22312"
      , Math InlineMath "A[\\text{hash}(k) \\pmod n]"
      , Str
          "\30340\22320\26041\21363\21487\12290\36890\24120\20063\26371\25645\37197Linked"
      , Space
      , Str "List\65292\23559"
      , Math InlineMath "A"
      , Str
          "\30340\27599\19968\20491\20803\32032\35222\28858\19968\20491Linked"
      , Space
      , Str
          "List\30340\38957\65292\25554\20837\30340\26178\20505\22914\26524\36935\21040\24050\32147\26377\26481\35199\20102\23601\26371\23559"
      , Math InlineMath "k"
      , Str "\25918\22312"
      , Math InlineMath "A[\\text{hash}(k) \\pmod n]"
      , Str
          "\30340\26368\24460\38957\12290\21034\38500\20063\24046\19981\22810\65292\21034\38500"
      , Math InlineMath "k"
      , Str "\23601\21040"
      , Math InlineMath "A[\\text{hash}(k) \\pmod n]"
      , Str
          "\21435\30475\65292\25214\21040\20102\20043\24460\21034\38500\12290\36889\27171\30340\22909\34389\26159\24179\22343\19978\20358\35498\35079\38620\24230\38750\24120\22909\65292\20294\26159\22914\26524\36935\21040\38647\28204\36039\23601\26371\29190\35079\38620\24230\12290"
      ]
  , Header
      3
      ( "\22914\20309\36984\25799\38620\28234\20989\25976"
      , []
      , []
      )
      [ Str "\22914\20309\36984\25799\38620\28234\20989\25976" ]
  , Para
      [ Str
          "\19968\20491\22909\30340\38620\28234\20989\25976\38656\35201\37027\20123\29305\36074\21602\65311\30070\28982\65292\38656\35201\26377\30456\30070\30340\24179\22343\24615\65306\19981\21487\20197\36664\20837\19968\22534\26481\35199\37117\20986\20358\26159\21516\27171\30340\65281\31532\20108\20491\37325\35201\30340\29305\36074\26159\31777\21934\35336\31639\65306\22914\26524\19968\20491\38620\28234\20989\25976\38656\35201"
      , Math InlineMath "O(n^2)"
      , Str
          "\30340\26178\38291\35336\31639\65292\21453\32780\26371\23559\28436\31639\27861\35722\24930\12290\36890\24120\65292\21916\27489\25226\19968\20491\23383\20018\34920\31034\25104\19968\20491"
      , Math InlineMath "p"
      , Str "\36914\20301\30340\25976\23383\65292"
      , Math InlineMath "a = 1, b = 2\\cdots"
      , Str "\39006\25512\65292\20363\22914"
      , Math
          InlineMath
          "\\text{hash}(\"abc\") = 26^2 \\times 1 + 26^1 \\times 2 + 26^0 \\times 3 = 731"
      , Str
          "\65292\28982\24460\28858\20102\38450\27490\20540\22826\22823\26371\27169\19968\20491\22823\36074\25976\65292\22914"
      , Math InlineMath "10003457"
      , Str
          "\20043\39006\30340\12290\22909\19968\40670\65288\25110\26159\27231\36554\19968\40670\65289\30340\28204\36039\26371\21345\24120\35211\30340\38620\28234\20989\25976\21734\65281\25152\20197\21487\20197\33258\24049\24819\19968\24819\23660\26044\33258\24049\30340\38620\28234\20989\25976\12290"
      ]
  , Header
      3
      ( "unordered_set" , [] , [] )
      [ Str "\8216unordered_set\8216" ]
  , Para
      [ Str "STL\30340"
      , Space
      , Str "hash"
      , Space
      , Str "table"
      , Space
      , Str "\21483\20570"
      , Space
      , Str "\8216unordered_set\8216\65292\23427\33287"
      , Space
      , Str "\8216set\8216"
      , Space
      , Str
          "\19968\27171\65292\37117\25903\25588\20102\25554\20837\12289\26597\35426\12289\21034\38500\30340\21151\33021\65292\21807\19968\26377\24046\21029\30340\26159\22240\28858\23427\30340\23526\20316\21407\29702\26159"
      , Space
      , Str "hash"
      , Space
      , Str
          "\65292\23565\26044\27599\27425\25805\20316\30340\35079\38620\24230\37117\26371\26159"
      , Math InlineMath "O(1)"
      , Str
          "\65292\20294\26159\36889\27171\19968\20358\23601\26371\27794\26377\20108\20803\25628\23563\27193\30340\33391\22909\24615\36074\65292\25152\20197\19981\33021\25353\29031\38918\24207\36941\27511\36664\20986\12290"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "unordered_set<int>"
          , Space
          , Str "use;"
          , Space
          , Str "//"
          , Space
          , Str
              "\23459\21578\19968\20491\20803\32032\22411\21029\28858"
          , Space
          , Str "int"
          , Space
          , Str "\30340\38598\21512"
          , SoftBreak
          , Str "use.reserve(N);"
          , Space
          , Str "//reserve"
          , Space
          , Str
              "N\20491\35352\25014\39636\21487\20197\21152\36895\31243\24335"
          , SoftBreak
          , Str "use.insert(1);"
          , Space
          , Str "//"
          , Space
          , Str "\25554\20837\20803\32032"
          , Space
          , Str "1"
          , SoftBreak
          , Str "use.insert(2);"
          , SoftBreak
          , Str "use.insert(5);"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "use.count(1)"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , Space
          , Str "//"
          , Space
          , Str "\26597\25214\20803\32032\65292true"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "use.count(3)"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , Space
          , Str "//"
          , Space
          , Str "false"
          , SoftBreak
          , Str "use.erase(1);"
          , Space
          , Str "//"
          , Space
          , Str
              "\21034\38500\20803\32032\65292\33509\38620\28234\34920\20839\19981\21547\27492\20803\32032\21063\22238\20659"
          , Space
          , Str "false"
          , SoftBreak
          , Str "//"
          , Space
          , Str "\19981\25903\25588"
          , Space
          , Str "upper_bound,"
          , Space
          , Str "lower_bound,"
          , Space
          , Str "find"
          , Space
          , Str "\31561\20108\20998\26597\25214\21151\33021"
          , SoftBreak
          , Str "for(auto"
          , Space
          , Str "&val:"
          , Space
          , Str "use)"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "val"
          , Space
          , Str "<<"
          , Space
          , Str "\8217"
          , Space
          , Str "\8217;"
          , SoftBreak
          , Str "//"
          , Space
          , Str
              "\21487\20197\36941\27511\65292\20294\19981\26371\29031\38918\24207"
          ]
      ]
  , Header
      3
      ( "unordered_map" , [] , [] )
      [ Str "\8216unordered_map\8216" ]
  , Para
      [ Str "\8216unordered_map\8216"
      , Space
      , Str "\30340\29992\27861\33287\19968\33324\30340"
      , Space
      , Str "\8216map\8216"
      , Space
      , Str
          "\20063\24046\19981\22810\65292\23526\20316\21407\29702\20063\26159\20491\38620\28234\34920\12290\22823\37096\20998\30340\25104\21729\20989\25976\20197\21450\36939\31639\23376\37117\33287"
      , Space
      , Str "\8216map\8216"
      , Space
      , Str "\19968\27171\65292\35079\38620\24230"
      , Math InlineMath "O(1)"
      , Str "\12290"
      ]
  , Div
      ( "" , [ "C++" ] , [] )
      [ Para
          [ Str "unordered_map<string,int>"
          , Space
          , Str "umapp;"
          , SoftBreak
          , Str "//"
          , Space
          , Str "\23459\21578\19968\20491\30001"
          , Space
          , Str "string"
          , Space
          , Str "\38620\28234\21040"
          , Space
          , Str "int"
          , Space
          , Str "\30340"
          , Space
          , Str "unordered_map"
          , SoftBreak
          , Str "umapp.insert("
          , Span
              ( "" , [] , [] ) [ Str "\"apple\"," , Space , Str "1" ]
          , Str ");"
          , SoftBreak
          , Str "umapp[\"book\"]"
          , Space
          , Str "="
          , Space
          , Str "2;"
          , SoftBreak
          , Str "umapp[\"apple\"]"
          , Space
          , Str "="
          , Space
          , Str "3;"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "umapp.count(\"apple\")"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , Space
          , Str "//"
          , Space
          , Str "true"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "umapp.count(\"my"
          , Space
          , Str "girlfriend\")"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , Space
          , Str "//"
          , Space
          , Str "false"
          ]
      , Para
          [ Str "for(auto"
          , Space
          , Str "&val:"
          , Space
          , Str "umapp)"
          , SoftBreak
          , Str "cout"
          , Space
          , Str "<<"
          , Space
          , Str "val.first"
          , Space
          , Str "<<"
          , Space
          , Str "\8217"
          , Space
          , Str "\8217"
          , Space
          , Str "<<"
          , Space
          , Str "val.second"
          , Space
          , Str "<<"
          , Space
          , Str "endl;"
          , SoftBreak
          , Str "//"
          , Space
          , Str
              "\25903\25588\36941\27511\65292\19968\27171\26159\28961\24207\30340"
          ]
      ]
  , Div
      ( "" , [ "tcolorbox" ] , [] )
      [ Para
          [ Str
              "\20063\21487\20197\33258\24049\23531\38620\28234\65281\36889\26159\8216unordered_map\8216\30340\23450\32681\31684\20363\65288\20551\35373\26159\25226\8216string\8216\36879\36942\38620\28234\20989\25976\35722\25104\8216unsigned"
          , Space
          , Str "long\8216\65289\65306"
          , LineBreak
          , LineBreak
          , Str "\8216unordered_map<\8216"
          , LineBreak
          , Str "\8216std::string,"
          , Space
          , Str "//key\8216"
          , LineBreak
          , Str "\8216unsigned"
          , Space
          , Str "long,"
          , Space
          , Str "//value\8216"
          , LineBreak
          , Str "\8216std::function<unsigned"
          , Space
          , Str "long(std::string)>"
          , Space
          , Str "\8216"
          , SoftBreak
          , Str "\8216//hash:"
          , Space
          , Str "string"
          , Space
          , Str "\35722\25104"
          , Space
          , Str "unsigned"
          , Space
          , Str "long\8216"
          , SoftBreak
          , Str "\8216std::function<bool(std::string,"
          , Space
          , Str "std::string)>"
          , Space
          , Str "//key\30340\27604\36611\20989\25976\8216"
          , LineBreak
          , Str "\8216>"
          , Space
          , Str "mymap(n,"
          , Space
          , Str "hashing_func,"
          , Space
          , Str "key_equal_fn<std::string>);"
          , Space
          , Str "\8216"
          , SoftBreak
          , Str
              "\8216//mymap\21021\22987\22823\23567\65292\38620\28234\20989\25976\65292key\30340\27604\36611\20989\25976"
          , Space
          , Str "\8216"
          ]
      ]
  , Para
      [ Str "\38620\28234\34920\38614\28982"
      , Math InlineMath "O(1)"
      , Str
          "\65292\20294\26159\20063\26377\27604\24179\34913\20108\20803\27193\24930\30340\26178\20505\12290\30070\20320\30340\37749\20540\28858\38750\24120\40848\22823\30340\36039\26009\32080\27083\26178(\20363\22914\65306\36229\38263string)\65292\22312\28204\36039\38568\27231\29983\25104\30340\26781\20214\19979\65292\20108\20803\25628\23563\27193\30340\27604\36611\20989\25976\36890\24120\21482\35201\27604\23565\21069\24190\20491\23383\20803\23601\33021\24555\36895\26597\25214\65307\38620\28234\21063\35201\33457\23383\20018\38263\24230\30340\32218\24615\26178\38291\25165\26377\36774\27861\35336\31639\20986\19968\20491\38620\28234\20540\12290\25152\20197\35201\30475\36664\20837\36039\26009\30340\39006\22411\36914\34892\21462\25448\65292\19981\35201\30475\21040\28961\38364\38918\24207\30340\26481\35199\23601\29992\8216unordered_map\8216\30776\12290"
      ]
  , Header
      3
      ( "\23526\25136\28436\32244" , [] , [] )
      [ Str "\23526\25136\28436\32244" ]
  , Para
      [ Str
          "\36889\38988\26159TOI\20837\29151\32771\30340\38988\30446\65292\26178\38480\21345\24471\38750\24120\32202\65292\29992\20102\24120\25976\27604\36611\22823\30340"
      , Space
      , Str "\8216map\8216"
      , Space
      , Str
          "\19968\23450\26371TLE\65292\20006\19988\25343\21040\36319\26292\21147"
      , Math InlineMath "O(n^4)"
      , Str
          "\19968\27171\30340\20998\25976\12290\23565\26044\26412\38988\20358\35498\65292\24517\38920\32771\24942\20351\29992\24120\25976\36611\23567\30340\26041\27861(\22914\25490\24207)\65292\25110\32773\30452\25509\20351\29992"
      , Math InlineMath "O(n^2)"
      , Str "\30340\28436\31639\27861\12290"
      ]
  , Div
      ( "" , [ "prbox" ] , [] )
      [ Para
          [ Span
              ( "" , [] , [] )
              [ Str "\22235\40670\20849\32218"
              , Space
              , Str "(TOI"
              , Space
              , Str "2019"
              , Space
              , Str "\21021\36984"
              , Space
              , Str "pA)"
              ]
          , Space
          , Str "\32102\20320"
          , Math InlineMath "n"
          , Str "\20491\40670\30340"
          , Math InlineMath "x,y"
          , Str "\22352\27161("
          , Math InlineMath "n\\leq 3000"
          , Str "\65292"
          , Math InlineMath "x_i,y_i\\leq 10^4"
          , Str
              ")\65292\27599\20491\40670\30340\32232\34399\28858\23427\20497\30340\36664\20837\38918\24207\12290\27714\32232\34399\23383\20856\24207\26368\23567\30340\20849\32218\22235\40670\65292\33509\19981\23384\22312\22235\40670\20849\32218\21063\36664\20986"
          , Math InlineMath "-1"
          , Str "\12290"
          ]
      ]
  ]
